//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CprBroker.Data.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CprBroker.Data.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT * FROM sys.tables WHERE name=N&apos;Activity&apos;)
        ///BEGIN
        ///	CREATE TABLE Activity(
        ///		ActivityId	UNIQUEIDENTIFIER			CONSTRAINT DF_Activity_ActivityId DEFAULT NEWID(),
        ///		ApplicationId UNIQUEIDENTIFIER NOT NULL CONSTRAINT FK_Activity_Application REFERENCES [Application](ApplicationId),
        ///		StartTS		DATETIME NOT NULL			CONSTRAINT DF_Activity_StartTS	  DEFAULT GETDATE(),
        ///		UserToken	VARCHAR(250) NULL,
        ///		UserId		VARCHAR(250) NULL,
        ///		MethodName	VARCHAR(250) NULL,
        ///
        ///		CONSTRAINT PK_Activity PRIMAR [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Activity_Sql {
            get {
                return ResourceManager.GetString("Activity_Sql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT * FROM sys.tables WHERE name=N&apos;Operation&apos;)
        ///BEGIN
        ///	CREATE TABLE Operation(
        ///		OperationId UNIQUEIDENTIFIER,
        ///		ActivityId UNIQUEIDENTIFIER NOT NULL,
        ///		OperationTypeId INT NOT NULL,
        ///		OperationKey VARCHAR(250) NOT NULL,
        ///		CONSTRAINT PK_Operation PRIMARY KEY NONCLUSTERED (OperationId),
        ///		CONSTRAINT FK_Operation_OperationType FOREIGN KEY (OperationTypeId) REFERENCES OperationType (OperationTypeId),
        ///		CONSTRAINT FK_Operation_Activity      FOREIGN KEY (ActivityId)      REFERENCES Acti [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Operation_Sql {
            get {
                return ResourceManager.GetString("Operation_Sql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name;OperationTypeId
        ///Generic;1
        ///Read;2
        ///Search;3
        ///GetUuid;4
        ///ReadPeriod;5
        ///PutSubscription;6
        ///Subscribe;8
        ///Unsubscribe;9
        ///ListSubscriptions;10.
        /// </summary>
        public static string OperationType_Csv {
            get {
                return ResourceManager.GetString("OperationType_Csv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT * FROM sys.tables WHERE name=N&apos;OperationType&apos;)
        ///BEGIN
        ///	CREATE TABLE OperationType(
        ///		OperationTypeId INT,
        ///		Name VARCHAR(250),
        ///		CONSTRAINT PK_OperationType PRIMARY KEY (OperationTypeId)
        ///	)ON [PRIMARY] 
        ///END
        ///GO.
        /// </summary>
        public static string OperationType_Sql {
            get {
                return ResourceManager.GetString("OperationType_Sql", resourceCulture);
            }
        }
    }
}
