// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.3.0.16585
//    <NameSpace>Xsd2Code.TestUnit</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>True</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>False</GenerateXMLAttributes><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace Xsd2Code.TestUnit {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Generic;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Address : System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string streetField;
        
        private string zipField;
        
        private string cityField;
        
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((this.nameField != null)) {
                    if ((nameField.Equals(value) != true)) {
                        this.nameField = value;
                        this.OnPropertyChanged("name");
                    }
                }
                else {
                    this.nameField = value;
                    this.OnPropertyChanged("name");
                }
            }
        }
        
        public string street {
            get {
                return this.streetField;
            }
            set {
                if ((this.streetField != null)) {
                    if ((streetField.Equals(value) != true)) {
                        this.streetField = value;
                        this.OnPropertyChanged("street");
                    }
                }
                else {
                    this.streetField = value;
                    this.OnPropertyChanged("street");
                }
            }
        }
        
        public string zip {
            get {
                return this.zipField;
            }
            set {
                if ((this.zipField != null)) {
                    if ((zipField.Equals(value) != true)) {
                        this.zipField = value;
                        this.OnPropertyChanged("zip");
                    }
                }
                else {
                    this.zipField = value;
                    this.OnPropertyChanged("zip");
                }
            }
        }
        
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((this.cityField != null)) {
                    if ((cityField.Equals(value) != true)) {
                        this.cityField = value;
                        this.OnPropertyChanged("city");
                    }
                }
                else {
                    this.cityField = value;
                    this.OnPropertyChanged("city");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public virtual void OnPropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null)) {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Addresses : System.ComponentModel.INotifyPropertyChanged {
        
        private List<Address> addressField;
        
        public List<Address> Address {
            get {
                if ((this.addressField == null)) {
                    this.addressField = new List<Address>();
                }
                return this.addressField;
            }
            set {
                if ((this.addressField != null)) {
                    if ((addressField.Equals(value) != true)) {
                        this.addressField = value;
                        this.OnPropertyChanged("Address");
                    }
                }
                else {
                    this.addressField = value;
                    this.OnPropertyChanged("Address");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public virtual void OnPropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null)) {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class Client : System.ComponentModel.INotifyPropertyChanged {
        
        private List<Address> addressesField;
        
        private string clientNameField;
        
        [System.Xml.Serialization.XmlArrayItemAttribute("Address", IsNullable=false)]
        public List<Address> Addresses {
            get {
                if ((this.addressesField == null)) {
                    this.addressesField = new List<Address>();
                }
                return this.addressesField;
            }
            set {
                if ((this.addressesField != null)) {
                    if ((addressesField.Equals(value) != true)) {
                        this.addressesField = value;
                        this.OnPropertyChanged("Addresses");
                    }
                }
                else {
                    this.addressesField = value;
                    this.OnPropertyChanged("Addresses");
                }
            }
        }
        
        public string clientName {
            get {
                return this.clientNameField;
            }
            set {
                if ((this.clientNameField != null)) {
                    if ((clientNameField.Equals(value) != true)) {
                        this.clientNameField = value;
                        this.OnPropertyChanged("clientName");
                    }
                }
                else {
                    this.clientNameField = value;
                    this.OnPropertyChanged("clientName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        public virtual void OnPropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null)) {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
