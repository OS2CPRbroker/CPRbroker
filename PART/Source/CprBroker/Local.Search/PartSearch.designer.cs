#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CprBroker.Providers.Local.Search
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PART")]
	public partial class PartSearchDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPersonSearchCache(PersonSearchCache instance);
    partial void UpdatePersonSearchCache(PersonSearchCache instance);
    partial void DeletePersonSearchCache(PersonSearchCache instance);
    #endregion
		
		public PartSearchDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PartSearchDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PartSearchDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PartSearchDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PersonSearchCache> PersonSearchCaches
		{
			get
			{
				return this.GetTable<PersonSearchCache>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonSearchCache")]
	public partial class PersonSearchCache : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.Guid> _PersonRegistrationId;
		
		private System.Guid _UUID;
		
		private string _UserInterfaceKeyText;
		
		private string _Birthdate;
		
		private string _NickName;
		
		private string _Note;
		
		private string _AddressingName;
		
		private string _PersonGivenName;
		
		private string _PersonMiddleName;
		
		private string _PersonSurnameName;
		
		private string _PersonGenderCode;
		
		private string _LivscyklusKode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonRegistrationIdChanging(System.Nullable<System.Guid> value);
    partial void OnPersonRegistrationIdChanged();
    partial void OnUUIDChanging(System.Guid value);
    partial void OnUUIDChanged();
    partial void OnUserInterfaceKeyTextChanging(string value);
    partial void OnUserInterfaceKeyTextChanged();
    partial void OnBirthdateChanging(string value);
    partial void OnBirthdateChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnAddressingNameChanging(string value);
    partial void OnAddressingNameChanged();
    partial void OnPersonGivenNameChanging(string value);
    partial void OnPersonGivenNameChanged();
    partial void OnPersonMiddleNameChanging(string value);
    partial void OnPersonMiddleNameChanged();
    partial void OnPersonSurnameNameChanging(string value);
    partial void OnPersonSurnameNameChanged();
    partial void OnPersonGenderCodeChanging(string value);
    partial void OnPersonGenderCodeChanged();
    partial void OnLivscyklusKodeChanging(string value);
    partial void OnLivscyklusKodeChanged();
    #endregion
		
		public PersonSearchCache()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonRegistrationId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonRegistrationId
		{
			get
			{
				return this._PersonRegistrationId;
			}
			set
			{
				if ((this._PersonRegistrationId != value))
				{
					this.OnPersonRegistrationIdChanging(value);
					this.SendPropertyChanging();
					this._PersonRegistrationId = value;
					this.SendPropertyChanged("PersonRegistrationId");
					this.OnPersonRegistrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UUID
		{
			get
			{
				return this._UUID;
			}
			set
			{
				if ((this._UUID != value))
				{
					this.OnUUIDChanging(value);
					this.SendPropertyChanging();
					this._UUID = value;
					this.SendPropertyChanged("UUID");
					this.OnUUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserInterfaceKeyText", DbType="VarChar(MAX)")]
		public string UserInterfaceKeyText
		{
			get
			{
				return this._UserInterfaceKeyText;
			}
			set
			{
				if ((this._UserInterfaceKeyText != value))
				{
					this.OnUserInterfaceKeyTextChanging(value);
					this.SendPropertyChanging();
					this._UserInterfaceKeyText = value;
					this.SendPropertyChanged("UserInterfaceKeyText");
					this.OnUserInterfaceKeyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="VarChar(MAX)")]
		public string Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="VarChar(MAX)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressingName", DbType="VarChar(MAX)")]
		public string AddressingName
		{
			get
			{
				return this._AddressingName;
			}
			set
			{
				if ((this._AddressingName != value))
				{
					this.OnAddressingNameChanging(value);
					this.SendPropertyChanging();
					this._AddressingName = value;
					this.SendPropertyChanged("AddressingName");
					this.OnAddressingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonGivenName", DbType="VarChar(MAX)")]
		public string PersonGivenName
		{
			get
			{
				return this._PersonGivenName;
			}
			set
			{
				if ((this._PersonGivenName != value))
				{
					this.OnPersonGivenNameChanging(value);
					this.SendPropertyChanging();
					this._PersonGivenName = value;
					this.SendPropertyChanged("PersonGivenName");
					this.OnPersonGivenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonMiddleName", DbType="VarChar(MAX)")]
		public string PersonMiddleName
		{
			get
			{
				return this._PersonMiddleName;
			}
			set
			{
				if ((this._PersonMiddleName != value))
				{
					this.OnPersonMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._PersonMiddleName = value;
					this.SendPropertyChanged("PersonMiddleName");
					this.OnPersonMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonSurnameName", DbType="VarChar(MAX)")]
		public string PersonSurnameName
		{
			get
			{
				return this._PersonSurnameName;
			}
			set
			{
				if ((this._PersonSurnameName != value))
				{
					this.OnPersonSurnameNameChanging(value);
					this.SendPropertyChanging();
					this._PersonSurnameName = value;
					this.SendPropertyChanged("PersonSurnameName");
					this.OnPersonSurnameNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonGenderCode", DbType="VarChar(MAX)")]
		public string PersonGenderCode
		{
			get
			{
				return this._PersonGenderCode;
			}
			set
			{
				if ((this._PersonGenderCode != value))
				{
					this.OnPersonGenderCodeChanging(value);
					this.SendPropertyChanging();
					this._PersonGenderCode = value;
					this.SendPropertyChanged("PersonGenderCode");
					this.OnPersonGenderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LivscyklusKode", DbType="VarChar(MAX)")]
		public string LivscyklusKode
		{
			get
			{
				return this._LivscyklusKode;
			}
			set
			{
				if ((this._LivscyklusKode != value))
				{
					this.OnLivscyklusKodeChanging(value);
					this.SendPropertyChanging();
					this._LivscyklusKode = value;
					this.SendPropertyChanged("LivscyklusKode");
					this.OnLivscyklusKodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
