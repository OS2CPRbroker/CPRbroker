#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CprBroker.Providers.E_M
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="E&M")]
	public partial class E_MDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCitizen(Citizen instance);
    partial void UpdateCitizen(Citizen instance);
    partial void DeleteCitizen(Citizen instance);
    partial void InsertCitizenPotReadyAddress(CitizenPotReadyAddress instance);
    partial void UpdateCitizenPotReadyAddress(CitizenPotReadyAddress instance);
    partial void DeleteCitizenPotReadyAddress(CitizenPotReadyAddress instance);
    partial void InsertChild(Child instance);
    partial void UpdateChild(Child instance);
    partial void DeleteChild(Child instance);
    partial void InsertResettlement(Resettlement instance);
    partial void UpdateResettlement(Resettlement instance);
    partial void DeleteResettlement(Resettlement instance);
    #endregion
		
		public E_MDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public E_MDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public E_MDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public E_MDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActiveCitizen> ActiveCitizens
		{
			get
			{
				return this.GetTable<ActiveCitizen>();
			}
		}
		
		public System.Data.Linq.Table<Postcode> Postcodes
		{
			get
			{
				return this.GetTable<Postcode>();
			}
		}
		
		public System.Data.Linq.Table<Citizen> Citizens
		{
			get
			{
				return this.GetTable<Citizen>();
			}
		}
		
		public System.Data.Linq.Table<DeadCitizen> DeadCitizens
		{
			get
			{
				return this.GetTable<DeadCitizen>();
			}
		}
		
		public System.Data.Linq.Table<CitizenPotReadyAddress> CitizenPotReadyAddresses
		{
			get
			{
				return this.GetTable<CitizenPotReadyAddress>();
			}
		}
		
		public System.Data.Linq.Table<Child> Childs
		{
			get
			{
				return this.GetTable<Child>();
			}
		}
		
		public System.Data.Linq.Table<Resettlement> Resettlements
		{
			get
			{
				return this.GetTable<Resettlement>();
			}
		}
	}
	
	[Table(Name="dbo.[Aktiv borger]")]
	public partial class ActiveCitizen
	{
		
		private System.Nullable<decimal> _PNR;
		
		private System.Nullable<short> _MunicipalityCode;
		
		private System.Nullable<System.DateTime> _Birthdate;
		
		private System.Nullable<char> _Gender;
		
		private string _Occupation;
		
		private System.Nullable<System.DateTime> _OccupationDate;
		
		private string _AddressingName;
		
		private System.Nullable<System.DateTime> _AddressingNameDate;
		
		private System.Nullable<char> _NationalChurchMarker;
		
		private System.Nullable<System.DateTime> _NationalChurchMarkerDate;
		
		private System.Nullable<short> _CitizenStatusCode;
		
		private System.Nullable<System.DateTime> _CitizenStatusCodeTimestamp;
		
		private System.Nullable<short> _NumberOfChildren;
		
		private System.Nullable<System.DateTime> _ArrivalTimestamp;
		
		private System.Nullable<short> _RoadCode;
		
		private string _HouseNumber;
		
		private string _Floor;
		
		private string _Door;
		
		private string _BuildingNumber;
		
		private System.Nullable<System.DateTime> _DepartureTimestamp;
		
		private string _CareOfName;
		
		private System.Nullable<System.DateTime> _MunicipalityArrivalDate;
		
		private System.Nullable<short> _DepartureMunicipalityCode;
		
		private System.Nullable<System.DateTime> _AddressProtectionDate;
		
		private System.Nullable<System.DateTime> _AddressProtectionTerminationDate;
		
		private System.Nullable<System.DateTime> _MaritalStatusTimestamp;
		
		private System.Nullable<char> _MaritalStatus;
		
		private System.Nullable<System.DateTime> _MaritalStatusTerminationDate;
		
		private System.Nullable<decimal> _SpousePNR;
		
		private System.Nullable<char> _SpouseFlag;
		
		private System.Nullable<short> _CountryCode;
		
		private System.Nullable<System.DateTime> _NationalityChangeTimestamp;
		
		private System.Nullable<System.DateTime> _NationalityTerminationTimestamp;
		
		private System.Nullable<decimal> _MotherPNR;
		
		private System.Nullable<decimal> _FatherPNR;
		
		private string _MotherDocument;
		
		private string _FatherDocument;
		
		private System.Nullable<char> _CitizenStatusTimestampUncertainty;
		
		private System.Nullable<char> _BirthRegistrationDateUncertainty;
		
		public ActiveCitizen()
		{
		}
		
		[Column(Name="PERSONNUMMER", Storage="_PNR", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					this._PNR = value;
				}
			}
		}
		
		[Column(Name="KOMMUNENUMMER", Storage="_MunicipalityCode", DbType="SmallInt")]
		public System.Nullable<short> MunicipalityCode
		{
			get
			{
				return this._MunicipalityCode;
			}
			set
			{
				if ((this._MunicipalityCode != value))
				{
					this._MunicipalityCode = value;
				}
			}
		}
		
		[Column(Name="FODSEL_DATO", Storage="_Birthdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this._Birthdate = value;
				}
			}
		}
		
		[Column(Name="KON", Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[Column(Name="STILLING", Storage="_Occupation", DbType="Char(34)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this._Occupation = value;
				}
			}
		}
		
		[Column(Name="STILLING_DATO", Storage="_OccupationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OccupationDate
		{
			get
			{
				return this._OccupationDate;
			}
			set
			{
				if ((this._OccupationDate != value))
				{
					this._OccupationDate = value;
				}
			}
		}
		
		[Column(Name="ADRESSERINGSNAVN", Storage="_AddressingName", DbType="Char(34)")]
		public string AddressingName
		{
			get
			{
				return this._AddressingName;
			}
			set
			{
				if ((this._AddressingName != value))
				{
					this._AddressingName = value;
				}
			}
		}
		
		[Column(Name="ADRNAVN_DATO", Storage="_AddressingNameDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddressingNameDate
		{
			get
			{
				return this._AddressingNameDate;
			}
			set
			{
				if ((this._AddressingNameDate != value))
				{
					this._AddressingNameDate = value;
				}
			}
		}
		
		[Column(Name="FOLKEKIRK_TILH_MRK", Storage="_NationalChurchMarker", DbType="Char(1)")]
		public System.Nullable<char> NationalChurchMarker
		{
			get
			{
				return this._NationalChurchMarker;
			}
			set
			{
				if ((this._NationalChurchMarker != value))
				{
					this._NationalChurchMarker = value;
				}
			}
		}
		
		[Column(Name="FOLKEKIRK_MRK_DATO", Storage="_NationalChurchMarkerDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NationalChurchMarkerDate
		{
			get
			{
				return this._NationalChurchMarkerDate;
			}
			set
			{
				if ((this._NationalChurchMarkerDate != value))
				{
					this._NationalChurchMarkerDate = value;
				}
			}
		}
		
		[Column(Name="BORGERSTATUS_KODE", Storage="_CitizenStatusCode", DbType="SmallInt")]
		public System.Nullable<short> CitizenStatusCode
		{
			get
			{
				return this._CitizenStatusCode;
			}
			set
			{
				if ((this._CitizenStatusCode != value))
				{
					this._CitizenStatusCode = value;
				}
			}
		}
		
		[Column(Name="BORGERSTATUS_TS", Storage="_CitizenStatusCodeTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> CitizenStatusCodeTimestamp
		{
			get
			{
				return this._CitizenStatusCodeTimestamp;
			}
			set
			{
				if ((this._CitizenStatusCodeTimestamp != value))
				{
					this._CitizenStatusCodeTimestamp = value;
				}
			}
		}
		
		[Column(Name="ANTAL_BORN", Storage="_NumberOfChildren", DbType="SmallInt")]
		public System.Nullable<short> NumberOfChildren
		{
			get
			{
				return this._NumberOfChildren;
			}
			set
			{
				if ((this._NumberOfChildren != value))
				{
					this._NumberOfChildren = value;
				}
			}
		}
		
		[Column(Name="ADR_TILFLYT_TS", Storage="_ArrivalTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalTimestamp
		{
			get
			{
				return this._ArrivalTimestamp;
			}
			set
			{
				if ((this._ArrivalTimestamp != value))
				{
					this._ArrivalTimestamp = value;
				}
			}
		}
		
		[Column(Name="VEJ_KODE", Storage="_RoadCode", DbType="SmallInt")]
		public System.Nullable<short> RoadCode
		{
			get
			{
				return this._RoadCode;
			}
			set
			{
				if ((this._RoadCode != value))
				{
					this._RoadCode = value;
				}
			}
		}
		
		[Column(Name="HUS_NUMMER", Storage="_HouseNumber", DbType="Char(4)")]
		public string HouseNumber
		{
			get
			{
				return this._HouseNumber;
			}
			set
			{
				if ((this._HouseNumber != value))
				{
					this._HouseNumber = value;
				}
			}
		}
		
		[Column(Name="ETAGE", Storage="_Floor", DbType="Char(2)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this._Floor = value;
				}
			}
		}
		
		[Column(Name="SIDE_DORNR", Storage="_Door", DbType="Char(4)")]
		public string Door
		{
			get
			{
				return this._Door;
			}
			set
			{
				if ((this._Door != value))
				{
					this._Door = value;
				}
			}
		}
		
		[Column(Name="BYGNING_NUMMER", Storage="_BuildingNumber", DbType="Char(4)")]
		public string BuildingNumber
		{
			get
			{
				return this._BuildingNumber;
			}
			set
			{
				if ((this._BuildingNumber != value))
				{
					this._BuildingNumber = value;
				}
			}
		}
		
		[Column(Name="ADR_FRAFLYT_TS", Storage="_DepartureTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DepartureTimestamp
		{
			get
			{
				return this._DepartureTimestamp;
			}
			set
			{
				if ((this._DepartureTimestamp != value))
				{
					this._DepartureTimestamp = value;
				}
			}
		}
		
		[Column(Name="CO_NAVN", Storage="_CareOfName", DbType="Char(34)")]
		public string CareOfName
		{
			get
			{
				return this._CareOfName;
			}
			set
			{
				if ((this._CareOfName != value))
				{
					this._CareOfName = value;
				}
			}
		}
		
		[Column(Name="KOM_TILFLYTDATO", Storage="_MunicipalityArrivalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MunicipalityArrivalDate
		{
			get
			{
				return this._MunicipalityArrivalDate;
			}
			set
			{
				if ((this._MunicipalityArrivalDate != value))
				{
					this._MunicipalityArrivalDate = value;
				}
			}
		}
		
		[Column(Name="FRAFLYT_KOMMUNENR", Storage="_DepartureMunicipalityCode", DbType="SmallInt")]
		public System.Nullable<short> DepartureMunicipalityCode
		{
			get
			{
				return this._DepartureMunicipalityCode;
			}
			set
			{
				if ((this._DepartureMunicipalityCode != value))
				{
					this._DepartureMunicipalityCode = value;
				}
			}
		}
		
		[Column(Name="ADRESSEBESKYT_DATO", Storage="_AddressProtectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddressProtectionDate
		{
			get
			{
				return this._AddressProtectionDate;
			}
			set
			{
				if ((this._AddressProtectionDate != value))
				{
					this._AddressProtectionDate = value;
				}
			}
		}
		
		[Column(Name="ADR_BESKYT_SLTDATO", Storage="_AddressProtectionTerminationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddressProtectionTerminationDate
		{
			get
			{
				return this._AddressProtectionTerminationDate;
			}
			set
			{
				if ((this._AddressProtectionTerminationDate != value))
				{
					this._AddressProtectionTerminationDate = value;
				}
			}
		}
		
		[Column(Name="CIVILSTAND_TS", Storage="_MaritalStatusTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> MaritalStatusTimestamp
		{
			get
			{
				return this._MaritalStatusTimestamp;
			}
			set
			{
				if ((this._MaritalStatusTimestamp != value))
				{
					this._MaritalStatusTimestamp = value;
				}
			}
		}
		
		[Column(Name="CIVILSTAND", Storage="_MaritalStatus", DbType="Char(1)")]
		public System.Nullable<char> MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this._MaritalStatus = value;
				}
			}
		}
		
		[Column(Name="CIVILST_OPHOR_TS", Storage="_MaritalStatusTerminationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MaritalStatusTerminationDate
		{
			get
			{
				return this._MaritalStatusTerminationDate;
			}
			set
			{
				if ((this._MaritalStatusTerminationDate != value))
				{
					this._MaritalStatusTerminationDate = value;
				}
			}
		}
		
		[Column(Name="PERSONNR_AGTEFALLE", Storage="_SpousePNR", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> SpousePNR
		{
			get
			{
				return this._SpousePNR;
			}
			set
			{
				if ((this._SpousePNR != value))
				{
					this._SpousePNR = value;
				}
			}
		}
		
		[Column(Name="AGTEFALLE_FLAG", Storage="_SpouseFlag", DbType="Char(1)")]
		public System.Nullable<char> SpouseFlag
		{
			get
			{
				return this._SpouseFlag;
			}
			set
			{
				if ((this._SpouseFlag != value))
				{
					this._SpouseFlag = value;
				}
			}
		}
		
		[Column(Name="LAND_KODE", Storage="_CountryCode", DbType="SmallInt")]
		public System.Nullable<short> CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this._CountryCode = value;
				}
			}
		}
		
		[Column(Name="STATSB_RET_TS", Storage="_NationalityChangeTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> NationalityChangeTimestamp
		{
			get
			{
				return this._NationalityChangeTimestamp;
			}
			set
			{
				if ((this._NationalityChangeTimestamp != value))
				{
					this._NationalityChangeTimestamp = value;
				}
			}
		}
		
		[Column(Name="STATBORG_OPHOR_TS", Storage="_NationalityTerminationTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> NationalityTerminationTimestamp
		{
			get
			{
				return this._NationalityTerminationTimestamp;
			}
			set
			{
				if ((this._NationalityTerminationTimestamp != value))
				{
					this._NationalityTerminationTimestamp = value;
				}
			}
		}
		
		[Column(Name="PERSONNUMMER_MOR", Storage="_MotherPNR", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> MotherPNR
		{
			get
			{
				return this._MotherPNR;
			}
			set
			{
				if ((this._MotherPNR != value))
				{
					this._MotherPNR = value;
				}
			}
		}
		
		[Column(Name="PERSONNUMMER_FAR", Storage="_FatherPNR", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> FatherPNR
		{
			get
			{
				return this._FatherPNR;
			}
			set
			{
				if ((this._FatherPNR != value))
				{
					this._FatherPNR = value;
				}
			}
		}
		
		[Column(Name="MOR_DOK", Storage="_MotherDocument", DbType="Char(3)")]
		public string MotherDocument
		{
			get
			{
				return this._MotherDocument;
			}
			set
			{
				if ((this._MotherDocument != value))
				{
					this._MotherDocument = value;
				}
			}
		}
		
		[Column(Name="FAR_DOK", Storage="_FatherDocument", DbType="Char(3)")]
		public string FatherDocument
		{
			get
			{
				return this._FatherDocument;
			}
			set
			{
				if ((this._FatherDocument != value))
				{
					this._FatherDocument = value;
				}
			}
		}
		
		[Column(Name="BORGERSTATUS_UM", Storage="_CitizenStatusTimestampUncertainty", DbType="Char(1)")]
		public System.Nullable<char> CitizenStatusTimestampUncertainty
		{
			get
			{
				return this._CitizenStatusTimestampUncertainty;
			}
			set
			{
				if ((this._CitizenStatusTimestampUncertainty != value))
				{
					this._CitizenStatusTimestampUncertainty = value;
				}
			}
		}
		
		[Column(Name="FODSELSREG_UM", Storage="_BirthRegistrationDateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> BirthRegistrationDateUncertainty
		{
			get
			{
				return this._BirthRegistrationDateUncertainty;
			}
			set
			{
				if ((this._BirthRegistrationDateUncertainty != value))
				{
					this._BirthRegistrationDateUncertainty = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Postnummer")]
	public partial class Postcode
	{
		
		private System.Nullable<short> _MunicipalityCode;
		
		private System.Nullable<short> _RoadCode;
		
		private string _HouseNumber;
		
		private System.Nullable<short> _PostCode;
		
		private string _PostDistrict;
		
		public Postcode()
		{
		}
		
		[Column(Name="KOMMUNENUMMER", Storage="_MunicipalityCode", DbType="SmallInt")]
		public System.Nullable<short> MunicipalityCode
		{
			get
			{
				return this._MunicipalityCode;
			}
			set
			{
				if ((this._MunicipalityCode != value))
				{
					this._MunicipalityCode = value;
				}
			}
		}
		
		[Column(Name="VEJ_KODE", Storage="_RoadCode", DbType="SmallInt")]
		public System.Nullable<short> RoadCode
		{
			get
			{
				return this._RoadCode;
			}
			set
			{
				if ((this._RoadCode != value))
				{
					this._RoadCode = value;
				}
			}
		}
		
		[Column(Name="HUS_NUMMER", Storage="_HouseNumber", DbType="Char(4)")]
		public string HouseNumber
		{
			get
			{
				return this._HouseNumber;
			}
			set
			{
				if ((this._HouseNumber != value))
				{
					this._HouseNumber = value;
				}
			}
		}
		
		[Column(Name="POSTNR", Storage="_PostCode", DbType="SmallInt")]
		public System.Nullable<short> PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this._PostCode = value;
				}
			}
		}
		
		[Column(Name="POSTDISTRIKT", Storage="_PostDistrict", DbType="Char(20)")]
		public string PostDistrict
		{
			get
			{
				return this._PostDistrict;
			}
			set
			{
				if ((this._PostDistrict != value))
				{
					this._PostDistrict = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Borger")]
	public partial class Citizen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _PNR;
		
		private System.Nullable<short> _MunicipalityCode;
		
		private System.Nullable<System.DateTime> _Birthdate;
		
		private System.Nullable<System.DateTime> _PNRCreationDate;
		
		private System.Nullable<System.DateTime> _PNRMarkingDate;
		
		private System.Nullable<char> _Gender;
		
		private string _Occupation;
		
		private System.Nullable<System.DateTime> _OccupationDate;
		
		private string _AddressingName;
		
		private System.Nullable<System.DateTime> _AddressingNameDate;
		
		private System.Nullable<short> _NationalChurchAuthorityCode;
		
		private System.Nullable<char> _NationalChurchMarker;
		
		private System.Nullable<System.DateTime> _NationalChurchMarkerDate;
		
		private System.Nullable<short> _CitizenStatusCode;
		
		private System.Nullable<System.DateTime> _CitizenStatusTimestamp;
		
		private System.Nullable<short> _BirthRegistrationAuthorityCode;
		
		private System.Nullable<System.DateTime> _BirthRegistrationDate;
		
		private string _BirthRegistrationText;
		
		private System.Nullable<short> _NumberOfChildren;
		
		private System.Nullable<System.DateTime> _CpcNationalChurchTimestamp;
		
		private System.Nullable<System.DateTime> _CprPersonTimestamp;
		
		private System.Nullable<System.DateTime> _ArrivalTimestamp;
		
		private System.Nullable<short> _RoadCode;
		
		private string _HouseNumber;
		
		private string _Floor;
		
		private string _Door;
		
		private string _BuildingNumber;
		
		private System.Nullable<System.DateTime> _DepartureTimestamp;
		
		private string _CareOfName;
		
		private System.Nullable<char> _OddEvenRoadSide;
		
		private System.Nullable<System.DateTime> _MunicipalityArrivalDate;
		
		private System.Nullable<short> _DepartureMunicipalityCode;
		
		private System.Nullable<System.DateTime> _AddressProtectionDate;
		
		private System.Nullable<System.DateTime> _AddressProtectionRemovalDate;
		
		private System.Nullable<System.DateTime> _DiretoryProtectionDate;
		
		private System.Nullable<System.DateTime> _MaritalStatusTimestamp;
		
		private System.Nullable<char> _MaritalStatus;
		
		private System.Nullable<System.DateTime> _MaritalStatusTerminationTimestamp;
		
		private System.Nullable<decimal> _SpousePNR;
		
		private System.Nullable<char> _SpouseFlag;
		
		private System.Nullable<short> _CountryCode;
		
		private System.Nullable<System.DateTime> _NationalityChangeTimestamp;
		
		private System.Nullable<System.DateTime> _NationalityTerminationTimestamp;
		
		private System.Nullable<decimal> _MotherPNR;
		
		private System.Nullable<decimal> _FatherPNR;
		
		private string _MotherDocument;
		
		private string _FatherDocument;
		
		private System.Nullable<System.DateTime> _DirectoryProtectionEndDate;
		
		private System.Nullable<char> _BirthdateUncertainty;
		
		private System.Nullable<char> _PnrCreationdateUncertainty;
		
		private System.Nullable<char> _PnrMarkingDateUncertainty;
		
		private System.Nullable<char> _PostDateUncertainty;
		
		private System.Nullable<char> _AddressingNameUncertainty;
		
		private System.Nullable<char> _NationalChurchMarkerUncertainty;
		
		private System.Nullable<char> _CitizenStatusTimestampUncertainty;
		
		private System.Nullable<char> _BirthRegistrationDateUncertainty;
		
		private System.Nullable<char> _ArrivalTimestampUncertainty;
		
		private System.Nullable<char> _DepartureTimestampUncertainty;
		
		private System.Nullable<char> _MunicipalityArrivalTimestampUncertainty;
		
		private System.Nullable<char> _AddressProtectionDateUncertainty;
		
		private System.Nullable<char> _AddressProtectionTerminationDateUncertainty;
		
		private System.Nullable<char> _DirectoryProtectionDateUncertainty;
		
		private System.Nullable<char> _MaritalStatusTimestampUncertainty;
		
		private System.Nullable<char> _MaritalStatusTerminationTimestampUncertainty;
		
		private System.Nullable<char> _NationalityChangeTimestampUncertainty;
		
		private System.Nullable<char> _NationalityTerminationTimestampUncertainty;
		
		private System.Nullable<char> _DirectoryProtectionRemovalDateUncertainty;
		
		private EntitySet<CitizenPotReadyAddress> _CitizenPotReadyAddresses;
		
		private EntitySet<Child> _ChildrenAsMother;
		
		private EntitySet<Child> _ChildrenAsFather;
		
		private EntitySet<Resettlement> _Resettlements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPNRChanging(System.Nullable<decimal> value);
    partial void OnPNRChanged();
    partial void OnMunicipalityCodeChanging(System.Nullable<short> value);
    partial void OnMunicipalityCodeChanged();
    partial void OnBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdateChanged();
    partial void OnPNRCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPNRCreationDateChanged();
    partial void OnPNRMarkingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPNRMarkingDateChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnOccupationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOccupationDateChanged();
    partial void OnAddressingNameChanging(string value);
    partial void OnAddressingNameChanged();
    partial void OnAddressingNameDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddressingNameDateChanged();
    partial void OnNationalChurchAuthorityCodeChanging(System.Nullable<short> value);
    partial void OnNationalChurchAuthorityCodeChanged();
    partial void OnNationalChurchMarkerChanging(System.Nullable<char> value);
    partial void OnNationalChurchMarkerChanged();
    partial void OnNationalChurchMarkerDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNationalChurchMarkerDateChanged();
    partial void OnCitizenStatusCodeChanging(System.Nullable<short> value);
    partial void OnCitizenStatusCodeChanged();
    partial void OnCitizenStatusTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnCitizenStatusTimestampChanged();
    partial void OnBirthRegistrationAuthorityCodeChanging(System.Nullable<short> value);
    partial void OnBirthRegistrationAuthorityCodeChanged();
    partial void OnBirthRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthRegistrationDateChanged();
    partial void OnBirthRegistrationTextChanging(string value);
    partial void OnBirthRegistrationTextChanged();
    partial void OnNumberOfChildrenChanging(System.Nullable<short> value);
    partial void OnNumberOfChildrenChanged();
    partial void OnCpcNationalChurchTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnCpcNationalChurchTimestampChanged();
    partial void OnCprPersonTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnCprPersonTimestampChanged();
    partial void OnArrivalTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnArrivalTimestampChanged();
    partial void OnRoadCodeChanging(System.Nullable<short> value);
    partial void OnRoadCodeChanged();
    partial void OnHouseNumberChanging(string value);
    partial void OnHouseNumberChanged();
    partial void OnFloorChanging(string value);
    partial void OnFloorChanged();
    partial void OnDoorChanging(string value);
    partial void OnDoorChanged();
    partial void OnBuildingNumberChanging(string value);
    partial void OnBuildingNumberChanged();
    partial void OnDepartureTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnDepartureTimestampChanged();
    partial void OnCareOfNameChanging(string value);
    partial void OnCareOfNameChanged();
    partial void OnOddEvenRoadSideChanging(System.Nullable<char> value);
    partial void OnOddEvenRoadSideChanged();
    partial void OnMunicipalityArrivalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMunicipalityArrivalDateChanged();
    partial void OnDepartureMunicipalityCodeChanging(System.Nullable<short> value);
    partial void OnDepartureMunicipalityCodeChanged();
    partial void OnAddressProtectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddressProtectionDateChanged();
    partial void OnAddressProtectionRemovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddressProtectionRemovalDateChanged();
    partial void OnDiretoryProtectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDiretoryProtectionDateChanged();
    partial void OnMaritalStatusTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnMaritalStatusTimestampChanged();
    partial void OnMaritalStatusChanging(System.Nullable<char> value);
    partial void OnMaritalStatusChanged();
    partial void OnMaritalStatusTerminationTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnMaritalStatusTerminationTimestampChanged();
    partial void OnSpousePNRChanging(System.Nullable<decimal> value);
    partial void OnSpousePNRChanged();
    partial void OnSpouseFlagChanging(System.Nullable<char> value);
    partial void OnSpouseFlagChanged();
    partial void OnCountryCodeChanging(System.Nullable<short> value);
    partial void OnCountryCodeChanged();
    partial void OnNationalityChangeTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnNationalityChangeTimestampChanged();
    partial void OnNationalityTerminationTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnNationalityTerminationTimestampChanged();
    partial void OnMotherPNRChanging(System.Nullable<decimal> value);
    partial void OnMotherPNRChanged();
    partial void OnFatherPNRChanging(System.Nullable<decimal> value);
    partial void OnFatherPNRChanged();
    partial void OnMotherDocumentChanging(string value);
    partial void OnMotherDocumentChanged();
    partial void OnFatherDocumentChanging(string value);
    partial void OnFatherDocumentChanged();
    partial void OnDirectoryProtectionEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDirectoryProtectionEndDateChanged();
    partial void OnBirthdateUncertaintyChanging(System.Nullable<char> value);
    partial void OnBirthdateUncertaintyChanged();
    partial void OnPnrCreationdateUncertaintyChanging(System.Nullable<char> value);
    partial void OnPnrCreationdateUncertaintyChanged();
    partial void OnPnrMarkingDateUncertaintyChanging(System.Nullable<char> value);
    partial void OnPnrMarkingDateUncertaintyChanged();
    partial void OnOccupationDateUncertaintyChanging(System.Nullable<char> value);
    partial void OnOccupationDateUncertaintyChanged();
    partial void OnAddressingNameUncertaintyChanging(System.Nullable<char> value);
    partial void OnAddressingNameUncertaintyChanged();
    partial void OnNationalChurchMarkerUncertaintyChanging(System.Nullable<char> value);
    partial void OnNationalChurchMarkerUncertaintyChanged();
    partial void OnCitizenStatusTimestampUncertaintyChanging(System.Nullable<char> value);
    partial void OnCitizenStatusTimestampUncertaintyChanged();
    partial void OnBirthRegistrationDateUncertaintyChanging(System.Nullable<char> value);
    partial void OnBirthRegistrationDateUncertaintyChanged();
    partial void OnArrivalTimestampUncertaintyChanging(System.Nullable<char> value);
    partial void OnArrivalTimestampUncertaintyChanged();
    partial void OnDepartureTimestampUncertaintyChanging(System.Nullable<char> value);
    partial void OnDepartureTimestampUncertaintyChanged();
    partial void OnMunicipalityArrivalTimestampUncertaintyChanging(System.Nullable<char> value);
    partial void OnMunicipalityArrivalTimestampUncertaintyChanged();
    partial void OnAddressProtectionDateUncertaintyChanging(System.Nullable<char> value);
    partial void OnAddressProtectionDateUncertaintyChanged();
    partial void OnAddressProtectionTerminationDateUncertaintyChanging(System.Nullable<char> value);
    partial void OnAddressProtectionTerminationDateUncertaintyChanged();
    partial void OnDirectoryProtectionDateUncertaintyChanging(System.Nullable<char> value);
    partial void OnDirectoryProtectionDateUncertaintyChanged();
    partial void OnMaritalStatusTimestampUncertaintyChanging(System.Nullable<char> value);
    partial void OnMaritalStatusTimestampUncertaintyChanged();
    partial void OnMaritalStatusTerminationTimestampUncertaintyChanging(System.Nullable<char> value);
    partial void OnMaritalStatusTerminationTimestampUncertaintyChanged();
    partial void OnNationalityChangeTimestampUncertaintyChanging(System.Nullable<char> value);
    partial void OnNationalityChangeTimestampUncertaintyChanged();
    partial void OnNationalityTerminationTimestampUncertaintyChanging(System.Nullable<char> value);
    partial void OnNationalityTerminationTimestampUncertaintyChanged();
    partial void OnDirectoryProtectionRemovalDateUncertaintyChanging(System.Nullable<char> value);
    partial void OnDirectoryProtectionRemovalDateUncertaintyChanged();
    #endregion
		
		public Citizen()
		{
			this._CitizenPotReadyAddresses = new EntitySet<CitizenPotReadyAddress>(new Action<CitizenPotReadyAddress>(this.attach_CitizenPotReadyAddresses), new Action<CitizenPotReadyAddress>(this.detach_CitizenPotReadyAddresses));
			this._ChildrenAsMother = new EntitySet<Child>(new Action<Child>(this.attach_ChildrenAsMother), new Action<Child>(this.detach_ChildrenAsMother));
			this._ChildrenAsFather = new EntitySet<Child>(new Action<Child>(this.attach_ChildrenAsFather), new Action<Child>(this.detach_ChildrenAsFather));
			this._Resettlements = new EntitySet<Resettlement>(new Action<Resettlement>(this.attach_Resettlements), new Action<Resettlement>(this.detach_Resettlements));
			OnCreated();
		}
		
		[Column(Name="PERSONNUMMER", Storage="_PNR", DbType="Decimal(11,0)", IsPrimaryKey=true)]
		public System.Nullable<decimal> PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					this.OnPNRChanging(value);
					this.SendPropertyChanging();
					this._PNR = value;
					this.SendPropertyChanged("PNR");
					this.OnPNRChanged();
				}
			}
		}
		
		[Column(Name="KOMMUNENUMMER", Storage="_MunicipalityCode", DbType="SmallInt")]
		public System.Nullable<short> MunicipalityCode
		{
			get
			{
				return this._MunicipalityCode;
			}
			set
			{
				if ((this._MunicipalityCode != value))
				{
					this.OnMunicipalityCodeChanging(value);
					this.SendPropertyChanging();
					this._MunicipalityCode = value;
					this.SendPropertyChanged("MunicipalityCode");
					this.OnMunicipalityCodeChanged();
				}
			}
		}
		
		[Column(Name="FODSEL_DATO", Storage="_Birthdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[Column(Name="PERSONNR_OPRETDATO", Storage="_PNRCreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PNRCreationDate
		{
			get
			{
				return this._PNRCreationDate;
			}
			set
			{
				if ((this._PNRCreationDate != value))
				{
					this.OnPNRCreationDateChanging(value);
					this.SendPropertyChanging();
					this._PNRCreationDate = value;
					this.SendPropertyChanged("PNRCreationDate");
					this.OnPNRCreationDateChanged();
				}
			}
		}
		
		[Column(Name="PERSONNR_MRK_DATO", Storage="_PNRMarkingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PNRMarkingDate
		{
			get
			{
				return this._PNRMarkingDate;
			}
			set
			{
				if ((this._PNRMarkingDate != value))
				{
					this.OnPNRMarkingDateChanging(value);
					this.SendPropertyChanging();
					this._PNRMarkingDate = value;
					this.SendPropertyChanged("PNRMarkingDate");
					this.OnPNRMarkingDateChanged();
				}
			}
		}
		
		[Column(Name="KON", Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[Column(Name="STILLING", Storage="_Occupation", DbType="Char(34)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[Column(Name="STILLING_DATO", Storage="_OccupationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OccupationDate
		{
			get
			{
				return this._OccupationDate;
			}
			set
			{
				if ((this._OccupationDate != value))
				{
					this.OnOccupationDateChanging(value);
					this.SendPropertyChanging();
					this._OccupationDate = value;
					this.SendPropertyChanged("OccupationDate");
					this.OnOccupationDateChanged();
				}
			}
		}
		
		[Column(Name="ADRESSERINGSNAVN", Storage="_AddressingName", DbType="Char(34)")]
		public string AddressingName
		{
			get
			{
				return this._AddressingName;
			}
			set
			{
				if ((this._AddressingName != value))
				{
					this.OnAddressingNameChanging(value);
					this.SendPropertyChanging();
					this._AddressingName = value;
					this.SendPropertyChanged("AddressingName");
					this.OnAddressingNameChanged();
				}
			}
		}
		
		[Column(Name="ADRNAVN_DATO", Storage="_AddressingNameDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddressingNameDate
		{
			get
			{
				return this._AddressingNameDate;
			}
			set
			{
				if ((this._AddressingNameDate != value))
				{
					this.OnAddressingNameDateChanging(value);
					this.SendPropertyChanging();
					this._AddressingNameDate = value;
					this.SendPropertyChanged("AddressingNameDate");
					this.OnAddressingNameDateChanged();
				}
			}
		}
		
		[Column(Name="FOLKEKIRKE_MYND_KD", Storage="_NationalChurchAuthorityCode", DbType="SmallInt")]
		public System.Nullable<short> NationalChurchAuthorityCode
		{
			get
			{
				return this._NationalChurchAuthorityCode;
			}
			set
			{
				if ((this._NationalChurchAuthorityCode != value))
				{
					this.OnNationalChurchAuthorityCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalChurchAuthorityCode = value;
					this.SendPropertyChanged("NationalChurchAuthorityCode");
					this.OnNationalChurchAuthorityCodeChanged();
				}
			}
		}
		
		[Column(Name="FOLKEKIRK_TILH_MRK", Storage="_NationalChurchMarker", DbType="Char(1)")]
		public System.Nullable<char> NationalChurchMarker
		{
			get
			{
				return this._NationalChurchMarker;
			}
			set
			{
				if ((this._NationalChurchMarker != value))
				{
					this.OnNationalChurchMarkerChanging(value);
					this.SendPropertyChanging();
					this._NationalChurchMarker = value;
					this.SendPropertyChanged("NationalChurchMarker");
					this.OnNationalChurchMarkerChanged();
				}
			}
		}
		
		[Column(Name="FOLKEKIRK_MRK_DATO", Storage="_NationalChurchMarkerDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NationalChurchMarkerDate
		{
			get
			{
				return this._NationalChurchMarkerDate;
			}
			set
			{
				if ((this._NationalChurchMarkerDate != value))
				{
					this.OnNationalChurchMarkerDateChanging(value);
					this.SendPropertyChanging();
					this._NationalChurchMarkerDate = value;
					this.SendPropertyChanged("NationalChurchMarkerDate");
					this.OnNationalChurchMarkerDateChanged();
				}
			}
		}
		
		[Column(Name="BORGERSTATUS_KODE", Storage="_CitizenStatusCode", DbType="SmallInt")]
		public System.Nullable<short> CitizenStatusCode
		{
			get
			{
				return this._CitizenStatusCode;
			}
			set
			{
				if ((this._CitizenStatusCode != value))
				{
					this.OnCitizenStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._CitizenStatusCode = value;
					this.SendPropertyChanged("CitizenStatusCode");
					this.OnCitizenStatusCodeChanged();
				}
			}
		}
		
		[Column(Name="BORGERSTATUS_TS", Storage="_CitizenStatusTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> CitizenStatusTimestamp
		{
			get
			{
				return this._CitizenStatusTimestamp;
			}
			set
			{
				if ((this._CitizenStatusTimestamp != value))
				{
					this.OnCitizenStatusTimestampChanging(value);
					this.SendPropertyChanging();
					this._CitizenStatusTimestamp = value;
					this.SendPropertyChanged("CitizenStatusTimestamp");
					this.OnCitizenStatusTimestampChanged();
				}
			}
		}
		
		[Column(Name="FODSELSREG_MYND_KD", Storage="_BirthRegistrationAuthorityCode", DbType="SmallInt")]
		public System.Nullable<short> BirthRegistrationAuthorityCode
		{
			get
			{
				return this._BirthRegistrationAuthorityCode;
			}
			set
			{
				if ((this._BirthRegistrationAuthorityCode != value))
				{
					this.OnBirthRegistrationAuthorityCodeChanging(value);
					this.SendPropertyChanging();
					this._BirthRegistrationAuthorityCode = value;
					this.SendPropertyChanged("BirthRegistrationAuthorityCode");
					this.OnBirthRegistrationAuthorityCodeChanged();
				}
			}
		}
		
		[Column(Name="FODSELSREG_DATO", Storage="_BirthRegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthRegistrationDate
		{
			get
			{
				return this._BirthRegistrationDate;
			}
			set
			{
				if ((this._BirthRegistrationDate != value))
				{
					this.OnBirthRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._BirthRegistrationDate = value;
					this.SendPropertyChanged("BirthRegistrationDate");
					this.OnBirthRegistrationDateChanged();
				}
			}
		}
		
		[Column(Name="FODESTED_TEKST", Storage="_BirthRegistrationText", DbType="Char(20)")]
		public string BirthRegistrationText
		{
			get
			{
				return this._BirthRegistrationText;
			}
			set
			{
				if ((this._BirthRegistrationText != value))
				{
					this.OnBirthRegistrationTextChanging(value);
					this.SendPropertyChanging();
					this._BirthRegistrationText = value;
					this.SendPropertyChanged("BirthRegistrationText");
					this.OnBirthRegistrationTextChanged();
				}
			}
		}
		
		[Column(Name="ANTAL_BORN", Storage="_NumberOfChildren", DbType="SmallInt")]
		public System.Nullable<short> NumberOfChildren
		{
			get
			{
				return this._NumberOfChildren;
			}
			set
			{
				if ((this._NumberOfChildren != value))
				{
					this.OnNumberOfChildrenChanging(value);
					this.SendPropertyChanging();
					this._NumberOfChildren = value;
					this.SendPropertyChanged("NumberOfChildren");
					this.OnNumberOfChildrenChanged();
				}
			}
		}
		
		[Column(Name="CPR_FOLKEKIRKE_TS", Storage="_CpcNationalChurchTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> CpcNationalChurchTimestamp
		{
			get
			{
				return this._CpcNationalChurchTimestamp;
			}
			set
			{
				if ((this._CpcNationalChurchTimestamp != value))
				{
					this.OnCpcNationalChurchTimestampChanging(value);
					this.SendPropertyChanging();
					this._CpcNationalChurchTimestamp = value;
					this.SendPropertyChanged("CpcNationalChurchTimestamp");
					this.OnCpcNationalChurchTimestampChanged();
				}
			}
		}
		
		[Column(Name="CPR_PERSON_TS", Storage="_CprPersonTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> CprPersonTimestamp
		{
			get
			{
				return this._CprPersonTimestamp;
			}
			set
			{
				if ((this._CprPersonTimestamp != value))
				{
					this.OnCprPersonTimestampChanging(value);
					this.SendPropertyChanging();
					this._CprPersonTimestamp = value;
					this.SendPropertyChanged("CprPersonTimestamp");
					this.OnCprPersonTimestampChanged();
				}
			}
		}
		
		[Column(Name="ADR_TILFLYT_TS", Storage="_ArrivalTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalTimestamp
		{
			get
			{
				return this._ArrivalTimestamp;
			}
			set
			{
				if ((this._ArrivalTimestamp != value))
				{
					this.OnArrivalTimestampChanging(value);
					this.SendPropertyChanging();
					this._ArrivalTimestamp = value;
					this.SendPropertyChanged("ArrivalTimestamp");
					this.OnArrivalTimestampChanged();
				}
			}
		}
		
		[Column(Name="VEJ_KODE", Storage="_RoadCode", DbType="SmallInt")]
		public System.Nullable<short> RoadCode
		{
			get
			{
				return this._RoadCode;
			}
			set
			{
				if ((this._RoadCode != value))
				{
					this.OnRoadCodeChanging(value);
					this.SendPropertyChanging();
					this._RoadCode = value;
					this.SendPropertyChanged("RoadCode");
					this.OnRoadCodeChanged();
				}
			}
		}
		
		[Column(Name="HUS_NUMMER", Storage="_HouseNumber", DbType="Char(4)")]
		public string HouseNumber
		{
			get
			{
				return this._HouseNumber;
			}
			set
			{
				if ((this._HouseNumber != value))
				{
					this.OnHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._HouseNumber = value;
					this.SendPropertyChanged("HouseNumber");
					this.OnHouseNumberChanged();
				}
			}
		}
		
		[Column(Name="ETAGE", Storage="_Floor", DbType="Char(2)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[Column(Name="SIDE_DORNR", Storage="_Door", DbType="Char(4)")]
		public string Door
		{
			get
			{
				return this._Door;
			}
			set
			{
				if ((this._Door != value))
				{
					this.OnDoorChanging(value);
					this.SendPropertyChanging();
					this._Door = value;
					this.SendPropertyChanged("Door");
					this.OnDoorChanged();
				}
			}
		}
		
		[Column(Name="BYGNING_NUMMER", Storage="_BuildingNumber", DbType="Char(4)")]
		public string BuildingNumber
		{
			get
			{
				return this._BuildingNumber;
			}
			set
			{
				if ((this._BuildingNumber != value))
				{
					this.OnBuildingNumberChanging(value);
					this.SendPropertyChanging();
					this._BuildingNumber = value;
					this.SendPropertyChanged("BuildingNumber");
					this.OnBuildingNumberChanged();
				}
			}
		}
		
		[Column(Name="ADR_FRAFLYT_TS", Storage="_DepartureTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DepartureTimestamp
		{
			get
			{
				return this._DepartureTimestamp;
			}
			set
			{
				if ((this._DepartureTimestamp != value))
				{
					this.OnDepartureTimestampChanging(value);
					this.SendPropertyChanging();
					this._DepartureTimestamp = value;
					this.SendPropertyChanged("DepartureTimestamp");
					this.OnDepartureTimestampChanged();
				}
			}
		}
		
		[Column(Name="CO_NAVN", Storage="_CareOfName", DbType="Char(34)")]
		public string CareOfName
		{
			get
			{
				return this._CareOfName;
			}
			set
			{
				if ((this._CareOfName != value))
				{
					this.OnCareOfNameChanging(value);
					this.SendPropertyChanging();
					this._CareOfName = value;
					this.SendPropertyChanged("CareOfName");
					this.OnCareOfNameChanged();
				}
			}
		}
		
		[Column(Name="VEJSIDE_F_LIG_ULIG", Storage="_OddEvenRoadSide", DbType="Char(1)")]
		public System.Nullable<char> OddEvenRoadSide
		{
			get
			{
				return this._OddEvenRoadSide;
			}
			set
			{
				if ((this._OddEvenRoadSide != value))
				{
					this.OnOddEvenRoadSideChanging(value);
					this.SendPropertyChanging();
					this._OddEvenRoadSide = value;
					this.SendPropertyChanged("OddEvenRoadSide");
					this.OnOddEvenRoadSideChanged();
				}
			}
		}
		
		[Column(Name="KOM_TILFLYTDATO", Storage="_MunicipalityArrivalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MunicipalityArrivalDate
		{
			get
			{
				return this._MunicipalityArrivalDate;
			}
			set
			{
				if ((this._MunicipalityArrivalDate != value))
				{
					this.OnMunicipalityArrivalDateChanging(value);
					this.SendPropertyChanging();
					this._MunicipalityArrivalDate = value;
					this.SendPropertyChanged("MunicipalityArrivalDate");
					this.OnMunicipalityArrivalDateChanged();
				}
			}
		}
		
		[Column(Name="FRAFLYT_KOMMUNENR", Storage="_DepartureMunicipalityCode", DbType="SmallInt")]
		public System.Nullable<short> DepartureMunicipalityCode
		{
			get
			{
				return this._DepartureMunicipalityCode;
			}
			set
			{
				if ((this._DepartureMunicipalityCode != value))
				{
					this.OnDepartureMunicipalityCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartureMunicipalityCode = value;
					this.SendPropertyChanged("DepartureMunicipalityCode");
					this.OnDepartureMunicipalityCodeChanged();
				}
			}
		}
		
		[Column(Name="ADRESSEBESKYT_DATO", Storage="_AddressProtectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddressProtectionDate
		{
			get
			{
				return this._AddressProtectionDate;
			}
			set
			{
				if ((this._AddressProtectionDate != value))
				{
					this.OnAddressProtectionDateChanging(value);
					this.SendPropertyChanging();
					this._AddressProtectionDate = value;
					this.SendPropertyChanged("AddressProtectionDate");
					this.OnAddressProtectionDateChanged();
				}
			}
		}
		
		[Column(Name="ADR_BESKYT_SLTDATO", Storage="_AddressProtectionRemovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddressProtectionRemovalDate
		{
			get
			{
				return this._AddressProtectionRemovalDate;
			}
			set
			{
				if ((this._AddressProtectionRemovalDate != value))
				{
					this.OnAddressProtectionRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._AddressProtectionRemovalDate = value;
					this.SendPropertyChanged("AddressProtectionRemovalDate");
					this.OnAddressProtectionRemovalDateChanged();
				}
			}
		}
		
		[Column(Name="VEJVIS_BESKYT_DATO", Storage="_DiretoryProtectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DiretoryProtectionDate
		{
			get
			{
				return this._DiretoryProtectionDate;
			}
			set
			{
				if ((this._DiretoryProtectionDate != value))
				{
					this.OnDiretoryProtectionDateChanging(value);
					this.SendPropertyChanging();
					this._DiretoryProtectionDate = value;
					this.SendPropertyChanged("DiretoryProtectionDate");
					this.OnDiretoryProtectionDateChanged();
				}
			}
		}
		
		[Column(Name="CIVILSTAND_TS", Storage="_MaritalStatusTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> MaritalStatusTimestamp
		{
			get
			{
				return this._MaritalStatusTimestamp;
			}
			set
			{
				if ((this._MaritalStatusTimestamp != value))
				{
					this.OnMaritalStatusTimestampChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatusTimestamp = value;
					this.SendPropertyChanged("MaritalStatusTimestamp");
					this.OnMaritalStatusTimestampChanged();
				}
			}
		}
		
		[Column(Name="CIVILSTAND", Storage="_MaritalStatus", DbType="Char(1)")]
		public System.Nullable<char> MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[Column(Name="CIVILST_OPHOR_TS", Storage="_MaritalStatusTerminationTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> MaritalStatusTerminationTimestamp
		{
			get
			{
				return this._MaritalStatusTerminationTimestamp;
			}
			set
			{
				if ((this._MaritalStatusTerminationTimestamp != value))
				{
					this.OnMaritalStatusTerminationTimestampChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatusTerminationTimestamp = value;
					this.SendPropertyChanged("MaritalStatusTerminationTimestamp");
					this.OnMaritalStatusTerminationTimestampChanged();
				}
			}
		}
		
		[Column(Name="PERSONNR_AGTEFALLE", Storage="_SpousePNR", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> SpousePNR
		{
			get
			{
				return this._SpousePNR;
			}
			set
			{
				if ((this._SpousePNR != value))
				{
					this.OnSpousePNRChanging(value);
					this.SendPropertyChanging();
					this._SpousePNR = value;
					this.SendPropertyChanged("SpousePNR");
					this.OnSpousePNRChanged();
				}
			}
		}
		
		[Column(Name="AGTEFALLE_FLAG", Storage="_SpouseFlag", DbType="Char(1)")]
		public System.Nullable<char> SpouseFlag
		{
			get
			{
				return this._SpouseFlag;
			}
			set
			{
				if ((this._SpouseFlag != value))
				{
					this.OnSpouseFlagChanging(value);
					this.SendPropertyChanging();
					this._SpouseFlag = value;
					this.SendPropertyChanged("SpouseFlag");
					this.OnSpouseFlagChanged();
				}
			}
		}
		
		[Column(Name="LAND_KODE", Storage="_CountryCode", DbType="SmallInt")]
		public System.Nullable<short> CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[Column(Name="STATSB_RET_TS", Storage="_NationalityChangeTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> NationalityChangeTimestamp
		{
			get
			{
				return this._NationalityChangeTimestamp;
			}
			set
			{
				if ((this._NationalityChangeTimestamp != value))
				{
					this.OnNationalityChangeTimestampChanging(value);
					this.SendPropertyChanging();
					this._NationalityChangeTimestamp = value;
					this.SendPropertyChanged("NationalityChangeTimestamp");
					this.OnNationalityChangeTimestampChanged();
				}
			}
		}
		
		[Column(Name="STATBORG_OPHOR_TS", Storage="_NationalityTerminationTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> NationalityTerminationTimestamp
		{
			get
			{
				return this._NationalityTerminationTimestamp;
			}
			set
			{
				if ((this._NationalityTerminationTimestamp != value))
				{
					this.OnNationalityTerminationTimestampChanging(value);
					this.SendPropertyChanging();
					this._NationalityTerminationTimestamp = value;
					this.SendPropertyChanged("NationalityTerminationTimestamp");
					this.OnNationalityTerminationTimestampChanged();
				}
			}
		}
		
		[Column(Name="PERSONNUMMER_MOR", Storage="_MotherPNR", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> MotherPNR
		{
			get
			{
				return this._MotherPNR;
			}
			set
			{
				if ((this._MotherPNR != value))
				{
					this.OnMotherPNRChanging(value);
					this.SendPropertyChanging();
					this._MotherPNR = value;
					this.SendPropertyChanged("MotherPNR");
					this.OnMotherPNRChanged();
				}
			}
		}
		
		[Column(Name="PERSONNUMMER_FAR", Storage="_FatherPNR", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> FatherPNR
		{
			get
			{
				return this._FatherPNR;
			}
			set
			{
				if ((this._FatherPNR != value))
				{
					this.OnFatherPNRChanging(value);
					this.SendPropertyChanging();
					this._FatherPNR = value;
					this.SendPropertyChanged("FatherPNR");
					this.OnFatherPNRChanged();
				}
			}
		}
		
		[Column(Name="MOR_DOK", Storage="_MotherDocument", DbType="Char(3)")]
		public string MotherDocument
		{
			get
			{
				return this._MotherDocument;
			}
			set
			{
				if ((this._MotherDocument != value))
				{
					this.OnMotherDocumentChanging(value);
					this.SendPropertyChanging();
					this._MotherDocument = value;
					this.SendPropertyChanged("MotherDocument");
					this.OnMotherDocumentChanged();
				}
			}
		}
		
		[Column(Name="FAR_DOK", Storage="_FatherDocument", DbType="Char(3)")]
		public string FatherDocument
		{
			get
			{
				return this._FatherDocument;
			}
			set
			{
				if ((this._FatherDocument != value))
				{
					this.OnFatherDocumentChanging(value);
					this.SendPropertyChanging();
					this._FatherDocument = value;
					this.SendPropertyChanged("FatherDocument");
					this.OnFatherDocumentChanged();
				}
			}
		}
		
		[Column(Name="VEJVIS_BESK_SLTDTO", Storage="_DirectoryProtectionEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DirectoryProtectionEndDate
		{
			get
			{
				return this._DirectoryProtectionEndDate;
			}
			set
			{
				if ((this._DirectoryProtectionEndDate != value))
				{
					this.OnDirectoryProtectionEndDateChanging(value);
					this.SendPropertyChanging();
					this._DirectoryProtectionEndDate = value;
					this.SendPropertyChanged("DirectoryProtectionEndDate");
					this.OnDirectoryProtectionEndDateChanged();
				}
			}
		}
		
		[Column(Name="FODSEL_UM", Storage="_BirthdateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> BirthdateUncertainty
		{
			get
			{
				return this._BirthdateUncertainty;
			}
			set
			{
				if ((this._BirthdateUncertainty != value))
				{
					this.OnBirthdateUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._BirthdateUncertainty = value;
					this.SendPropertyChanged("BirthdateUncertainty");
					this.OnBirthdateUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="PERSONNR_OPRET_UM", Storage="_PnrCreationdateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> PnrCreationdateUncertainty
		{
			get
			{
				return this._PnrCreationdateUncertainty;
			}
			set
			{
				if ((this._PnrCreationdateUncertainty != value))
				{
					this.OnPnrCreationdateUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._PnrCreationdateUncertainty = value;
					this.SendPropertyChanged("PnrCreationdateUncertainty");
					this.OnPnrCreationdateUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="PERSONNR_MRK_UM", Storage="_PnrMarkingDateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> PnrMarkingDateUncertainty
		{
			get
			{
				return this._PnrMarkingDateUncertainty;
			}
			set
			{
				if ((this._PnrMarkingDateUncertainty != value))
				{
					this.OnPnrMarkingDateUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._PnrMarkingDateUncertainty = value;
					this.SendPropertyChanged("PnrMarkingDateUncertainty");
					this.OnPnrMarkingDateUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="STILLING_UM", Storage="_PostDateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> OccupationDateUncertainty
		{
			get
			{
				return this._PostDateUncertainty;
			}
			set
			{
				if ((this._PostDateUncertainty != value))
				{
					this.OnOccupationDateUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._PostDateUncertainty = value;
					this.SendPropertyChanged("OccupationDateUncertainty");
					this.OnOccupationDateUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="ADRNAVN_UM", Storage="_AddressingNameUncertainty", DbType="Char(1)")]
		public System.Nullable<char> AddressingNameUncertainty
		{
			get
			{
				return this._AddressingNameUncertainty;
			}
			set
			{
				if ((this._AddressingNameUncertainty != value))
				{
					this.OnAddressingNameUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._AddressingNameUncertainty = value;
					this.SendPropertyChanged("AddressingNameUncertainty");
					this.OnAddressingNameUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="FOLKEKIRK_MRK_UM", Storage="_NationalChurchMarkerUncertainty", DbType="Char(1)")]
		public System.Nullable<char> NationalChurchMarkerUncertainty
		{
			get
			{
				return this._NationalChurchMarkerUncertainty;
			}
			set
			{
				if ((this._NationalChurchMarkerUncertainty != value))
				{
					this.OnNationalChurchMarkerUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._NationalChurchMarkerUncertainty = value;
					this.SendPropertyChanged("NationalChurchMarkerUncertainty");
					this.OnNationalChurchMarkerUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="BORGERSTATUS_UM", Storage="_CitizenStatusTimestampUncertainty", DbType="Char(1)")]
		public System.Nullable<char> CitizenStatusTimestampUncertainty
		{
			get
			{
				return this._CitizenStatusTimestampUncertainty;
			}
			set
			{
				if ((this._CitizenStatusTimestampUncertainty != value))
				{
					this.OnCitizenStatusTimestampUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._CitizenStatusTimestampUncertainty = value;
					this.SendPropertyChanged("CitizenStatusTimestampUncertainty");
					this.OnCitizenStatusTimestampUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="FODSELSREG_UM", Storage="_BirthRegistrationDateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> BirthRegistrationDateUncertainty
		{
			get
			{
				return this._BirthRegistrationDateUncertainty;
			}
			set
			{
				if ((this._BirthRegistrationDateUncertainty != value))
				{
					this.OnBirthRegistrationDateUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._BirthRegistrationDateUncertainty = value;
					this.SendPropertyChanged("BirthRegistrationDateUncertainty");
					this.OnBirthRegistrationDateUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="ADR_TILFLYT_UM", Storage="_ArrivalTimestampUncertainty", DbType="Char(1)")]
		public System.Nullable<char> ArrivalTimestampUncertainty
		{
			get
			{
				return this._ArrivalTimestampUncertainty;
			}
			set
			{
				if ((this._ArrivalTimestampUncertainty != value))
				{
					this.OnArrivalTimestampUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._ArrivalTimestampUncertainty = value;
					this.SendPropertyChanged("ArrivalTimestampUncertainty");
					this.OnArrivalTimestampUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="ADR_FRAFLYT_UM", Storage="_DepartureTimestampUncertainty", DbType="Char(1)")]
		public System.Nullable<char> DepartureTimestampUncertainty
		{
			get
			{
				return this._DepartureTimestampUncertainty;
			}
			set
			{
				if ((this._DepartureTimestampUncertainty != value))
				{
					this.OnDepartureTimestampUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._DepartureTimestampUncertainty = value;
					this.SendPropertyChanged("DepartureTimestampUncertainty");
					this.OnDepartureTimestampUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="KOM_TILFLYT_UM", Storage="_MunicipalityArrivalTimestampUncertainty", DbType="Char(1)")]
		public System.Nullable<char> MunicipalityArrivalTimestampUncertainty
		{
			get
			{
				return this._MunicipalityArrivalTimestampUncertainty;
			}
			set
			{
				if ((this._MunicipalityArrivalTimestampUncertainty != value))
				{
					this.OnMunicipalityArrivalTimestampUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._MunicipalityArrivalTimestampUncertainty = value;
					this.SendPropertyChanged("MunicipalityArrivalTimestampUncertainty");
					this.OnMunicipalityArrivalTimestampUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="ADR_BESKYT_UM", Storage="_AddressProtectionDateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> AddressProtectionDateUncertainty
		{
			get
			{
				return this._AddressProtectionDateUncertainty;
			}
			set
			{
				if ((this._AddressProtectionDateUncertainty != value))
				{
					this.OnAddressProtectionDateUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._AddressProtectionDateUncertainty = value;
					this.SendPropertyChanged("AddressProtectionDateUncertainty");
					this.OnAddressProtectionDateUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="ADR_BESKYT_SLT_UM", Storage="_AddressProtectionTerminationDateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> AddressProtectionTerminationDateUncertainty
		{
			get
			{
				return this._AddressProtectionTerminationDateUncertainty;
			}
			set
			{
				if ((this._AddressProtectionTerminationDateUncertainty != value))
				{
					this.OnAddressProtectionTerminationDateUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._AddressProtectionTerminationDateUncertainty = value;
					this.SendPropertyChanged("AddressProtectionTerminationDateUncertainty");
					this.OnAddressProtectionTerminationDateUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="VEJVIS_BESKYT_UM", Storage="_DirectoryProtectionDateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> DirectoryProtectionDateUncertainty
		{
			get
			{
				return this._DirectoryProtectionDateUncertainty;
			}
			set
			{
				if ((this._DirectoryProtectionDateUncertainty != value))
				{
					this.OnDirectoryProtectionDateUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._DirectoryProtectionDateUncertainty = value;
					this.SendPropertyChanged("DirectoryProtectionDateUncertainty");
					this.OnDirectoryProtectionDateUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="CIVILSTAND_UM", Storage="_MaritalStatusTimestampUncertainty", DbType="Char(1)")]
		public System.Nullable<char> MaritalStatusTimestampUncertainty
		{
			get
			{
				return this._MaritalStatusTimestampUncertainty;
			}
			set
			{
				if ((this._MaritalStatusTimestampUncertainty != value))
				{
					this.OnMaritalStatusTimestampUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatusTimestampUncertainty = value;
					this.SendPropertyChanged("MaritalStatusTimestampUncertainty");
					this.OnMaritalStatusTimestampUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="CIVILST_OPHOR_UM", Storage="_MaritalStatusTerminationTimestampUncertainty", DbType="Char(1)")]
		public System.Nullable<char> MaritalStatusTerminationTimestampUncertainty
		{
			get
			{
				return this._MaritalStatusTerminationTimestampUncertainty;
			}
			set
			{
				if ((this._MaritalStatusTerminationTimestampUncertainty != value))
				{
					this.OnMaritalStatusTerminationTimestampUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatusTerminationTimestampUncertainty = value;
					this.SendPropertyChanged("MaritalStatusTerminationTimestampUncertainty");
					this.OnMaritalStatusTerminationTimestampUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="STATSB_RET_UM", Storage="_NationalityChangeTimestampUncertainty", DbType="Char(1)")]
		public System.Nullable<char> NationalityChangeTimestampUncertainty
		{
			get
			{
				return this._NationalityChangeTimestampUncertainty;
			}
			set
			{
				if ((this._NationalityChangeTimestampUncertainty != value))
				{
					this.OnNationalityChangeTimestampUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._NationalityChangeTimestampUncertainty = value;
					this.SendPropertyChanged("NationalityChangeTimestampUncertainty");
					this.OnNationalityChangeTimestampUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="STATBORG_OPHOR_UM", Storage="_NationalityTerminationTimestampUncertainty", DbType="Char(1)")]
		public System.Nullable<char> NationalityTerminationTimestampUncertainty
		{
			get
			{
				return this._NationalityTerminationTimestampUncertainty;
			}
			set
			{
				if ((this._NationalityTerminationTimestampUncertainty != value))
				{
					this.OnNationalityTerminationTimestampUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._NationalityTerminationTimestampUncertainty = value;
					this.SendPropertyChanged("NationalityTerminationTimestampUncertainty");
					this.OnNationalityTerminationTimestampUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="VEJVIS_BESK_SLT_UM", Storage="_DirectoryProtectionRemovalDateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> DirectoryProtectionRemovalDateUncertainty
		{
			get
			{
				return this._DirectoryProtectionRemovalDateUncertainty;
			}
			set
			{
				if ((this._DirectoryProtectionRemovalDateUncertainty != value))
				{
					this.OnDirectoryProtectionRemovalDateUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._DirectoryProtectionRemovalDateUncertainty = value;
					this.SendPropertyChanged("DirectoryProtectionRemovalDateUncertainty");
					this.OnDirectoryProtectionRemovalDateUncertaintyChanged();
				}
			}
		}
		
		[Association(Name="Citizen_CitizenPotReadyAddress", Storage="_CitizenPotReadyAddresses", ThisKey="PNR", OtherKey="PNR")]
		public EntitySet<CitizenPotReadyAddress> CitizenPotReadyAddresses
		{
			get
			{
				return this._CitizenPotReadyAddresses;
			}
			set
			{
				this._CitizenPotReadyAddresses.Assign(value);
			}
		}
		
		[Association(Name="Citizen_Child", Storage="_ChildrenAsMother", ThisKey="PNR", OtherKey="MotherPNR")]
		public EntitySet<Child> ChildrenAsMother
		{
			get
			{
				return this._ChildrenAsMother;
			}
			set
			{
				this._ChildrenAsMother.Assign(value);
			}
		}
		
		[Association(Name="Citizen_Child1", Storage="_ChildrenAsFather", ThisKey="PNR", OtherKey="FatherPNR")]
		public EntitySet<Child> ChildrenAsFather
		{
			get
			{
				return this._ChildrenAsFather;
			}
			set
			{
				this._ChildrenAsFather.Assign(value);
			}
		}
		
		[Association(Name="Citizen_Resettlement", Storage="_Resettlements", ThisKey="PNR", OtherKey="PNR")]
		public EntitySet<Resettlement> Resettlements
		{
			get
			{
				return this._Resettlements;
			}
			set
			{
				this._Resettlements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CitizenPotReadyAddresses(CitizenPotReadyAddress entity)
		{
			this.SendPropertyChanging();
			entity.Citizen = this;
		}
		
		private void detach_CitizenPotReadyAddresses(CitizenPotReadyAddress entity)
		{
			this.SendPropertyChanging();
			entity.Citizen = null;
		}
		
		private void attach_ChildrenAsMother(Child entity)
		{
			this.SendPropertyChanging();
			entity.Mother = this;
		}
		
		private void detach_ChildrenAsMother(Child entity)
		{
			this.SendPropertyChanging();
			entity.Mother = null;
		}
		
		private void attach_ChildrenAsFather(Child entity)
		{
			this.SendPropertyChanging();
			entity.Father = this;
		}
		
		private void detach_ChildrenAsFather(Child entity)
		{
			this.SendPropertyChanging();
			entity.Father = null;
		}
		
		private void attach_Resettlements(Resettlement entity)
		{
			this.SendPropertyChanging();
			entity.Citizen = this;
		}
		
		private void detach_Resettlements(Resettlement entity)
		{
			this.SendPropertyChanging();
			entity.Citizen = null;
		}
	}
	
	[Table(Name="dbo.[Borger - afdøde]")]
	public partial class DeadCitizen
	{
		
		private System.Nullable<short> _MunicipalityCode;
		
		private System.Nullable<decimal> _PNR;
		
		private string _AddressingName;
		
		private string _CareOfName;
		
		private System.Nullable<short> _RoadCode;
		
		private string _RoadName;
		
		private string _HouseNumber;
		
		private string _Floor;
		
		private string _Door;
		
		private string _CityName;
		
		private System.Nullable<short> _PostCode;
		
		private string _PostDistrict;
		
		private System.Nullable<short> _CitizenStatusCode;
		
		private System.Nullable<System.DateTime> _CitizenStatusDate;
		
		public DeadCitizen()
		{
		}
		
		[Column(Name="EKOMNR", Storage="_MunicipalityCode", DbType="SmallInt")]
		public System.Nullable<short> MunicipalityCode
		{
			get
			{
				return this._MunicipalityCode;
			}
			set
			{
				if ((this._MunicipalityCode != value))
				{
					this._MunicipalityCode = value;
				}
			}
		}
		
		[Column(Name="PERSONNUMMER", Storage="_PNR", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					this._PNR = value;
				}
			}
		}
		
		[Column(Name="ADRESSERINGSNAVN", Storage="_AddressingName", DbType="Char(34)")]
		public string AddressingName
		{
			get
			{
				return this._AddressingName;
			}
			set
			{
				if ((this._AddressingName != value))
				{
					this._AddressingName = value;
				}
			}
		}
		
		[Column(Name="CO_NAVN", Storage="_CareOfName", DbType="Char(34)")]
		public string CareOfName
		{
			get
			{
				return this._CareOfName;
			}
			set
			{
				if ((this._CareOfName != value))
				{
					this._CareOfName = value;
				}
			}
		}
		
		[Column(Name="VEJ_KODE", Storage="_RoadCode", DbType="SmallInt")]
		public System.Nullable<short> RoadCode
		{
			get
			{
				return this._RoadCode;
			}
			set
			{
				if ((this._RoadCode != value))
				{
					this._RoadCode = value;
				}
			}
		}
		
		[Column(Name="VEJ_NAVN", Storage="_RoadName", DbType="Char(20)")]
		public string RoadName
		{
			get
			{
				return this._RoadName;
			}
			set
			{
				if ((this._RoadName != value))
				{
					this._RoadName = value;
				}
			}
		}
		
		[Column(Name="HUS_NUMMER", Storage="_HouseNumber", DbType="Char(4)")]
		public string HouseNumber
		{
			get
			{
				return this._HouseNumber;
			}
			set
			{
				if ((this._HouseNumber != value))
				{
					this._HouseNumber = value;
				}
			}
		}
		
		[Column(Name="ETAGE", Storage="_Floor", DbType="Char(2)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this._Floor = value;
				}
			}
		}
		
		[Column(Name="SIDE_DORNR", Storage="_Door", DbType="Char(4)")]
		public string Door
		{
			get
			{
				return this._Door;
			}
			set
			{
				if ((this._Door != value))
				{
					this._Door = value;
				}
			}
		}
		
		[Column(Name="BYNAVN", Storage="_CityName", DbType="Char(34)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this._CityName = value;
				}
			}
		}
		
		[Column(Name="POSTNR", Storage="_PostCode", DbType="SmallInt")]
		public System.Nullable<short> PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this._PostCode = value;
				}
			}
		}
		
		[Column(Name="POSTDISTRIKT", Storage="_PostDistrict", DbType="Char(20)")]
		public string PostDistrict
		{
			get
			{
				return this._PostDistrict;
			}
			set
			{
				if ((this._PostDistrict != value))
				{
					this._PostDistrict = value;
				}
			}
		}
		
		[Column(Name="BORGERSTATUS_KODE", Storage="_CitizenStatusCode", DbType="SmallInt")]
		public System.Nullable<short> CitizenStatusCode
		{
			get
			{
				return this._CitizenStatusCode;
			}
			set
			{
				if ((this._CitizenStatusCode != value))
				{
					this._CitizenStatusCode = value;
				}
			}
		}
		
		[Column(Name="BORGERSTATUS_TS", Storage="_CitizenStatusDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CitizenStatusDate
		{
			get
			{
				return this._CitizenStatusDate;
			}
			set
			{
				if ((this._CitizenStatusDate != value))
				{
					this._CitizenStatusDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.[Borger grydeklar adresse]")]
	public partial class CitizenPotReadyAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<short> _MunicipalityCode;
		
		private System.Nullable<decimal> _PNR;
		
		private string _AddressingName;
		
		private string _CareOfName;
		
		private System.Nullable<short> _RoadCode;
		
		private string _RoadName;
		
		private string _HouseNumber;
		
		private string _Floor;
		
		private string _Door;
		
		private string _CityName;
		
		private System.Nullable<short> _PostCode;
		
		private string _PostDistrict;
		
		private EntityRef<Citizen> _Citizen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMunicipalityCodeChanging(System.Nullable<short> value);
    partial void OnMunicipalityCodeChanged();
    partial void OnPNRChanging(System.Nullable<decimal> value);
    partial void OnPNRChanged();
    partial void OnAddressingNameChanging(string value);
    partial void OnAddressingNameChanged();
    partial void OnCareOfNameChanging(string value);
    partial void OnCareOfNameChanged();
    partial void OnRoadCodeChanging(System.Nullable<short> value);
    partial void OnRoadCodeChanged();
    partial void OnRoadNameChanging(string value);
    partial void OnRoadNameChanged();
    partial void OnHouseNumberChanging(string value);
    partial void OnHouseNumberChanged();
    partial void OnFloorChanging(string value);
    partial void OnFloorChanged();
    partial void OnDoorChanging(string value);
    partial void OnDoorChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnPostCodeChanging(System.Nullable<short> value);
    partial void OnPostCodeChanged();
    partial void OnPostDistrictChanging(string value);
    partial void OnPostDistrictChanged();
    #endregion
		
		public CitizenPotReadyAddress()
		{
			this._Citizen = default(EntityRef<Citizen>);
			OnCreated();
		}
		
		[Column(Name="EKOMNR", Storage="_MunicipalityCode", DbType="SmallInt")]
		public System.Nullable<short> MunicipalityCode
		{
			get
			{
				return this._MunicipalityCode;
			}
			set
			{
				if ((this._MunicipalityCode != value))
				{
					this.OnMunicipalityCodeChanging(value);
					this.SendPropertyChanging();
					this._MunicipalityCode = value;
					this.SendPropertyChanged("MunicipalityCode");
					this.OnMunicipalityCodeChanged();
				}
			}
		}
		
		[Column(Name="PERSONNUMMER", Storage="_PNR", DbType="Decimal(11,0)", IsPrimaryKey=true)]
		public System.Nullable<decimal> PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					this.OnPNRChanging(value);
					this.SendPropertyChanging();
					this._PNR = value;
					this.SendPropertyChanged("PNR");
					this.OnPNRChanged();
				}
			}
		}
		
		[Column(Name="ADRESSERINGSNAVN", Storage="_AddressingName", DbType="Char(34)")]
		public string AddressingName
		{
			get
			{
				return this._AddressingName;
			}
			set
			{
				if ((this._AddressingName != value))
				{
					this.OnAddressingNameChanging(value);
					this.SendPropertyChanging();
					this._AddressingName = value;
					this.SendPropertyChanged("AddressingName");
					this.OnAddressingNameChanged();
				}
			}
		}
		
		[Column(Name="CO_NAVN", Storage="_CareOfName", DbType="Char(34)")]
		public string CareOfName
		{
			get
			{
				return this._CareOfName;
			}
			set
			{
				if ((this._CareOfName != value))
				{
					this.OnCareOfNameChanging(value);
					this.SendPropertyChanging();
					this._CareOfName = value;
					this.SendPropertyChanged("CareOfName");
					this.OnCareOfNameChanged();
				}
			}
		}
		
		[Column(Name="VEJ_KODE", Storage="_RoadCode", DbType="SmallInt")]
		public System.Nullable<short> RoadCode
		{
			get
			{
				return this._RoadCode;
			}
			set
			{
				if ((this._RoadCode != value))
				{
					this.OnRoadCodeChanging(value);
					this.SendPropertyChanging();
					this._RoadCode = value;
					this.SendPropertyChanged("RoadCode");
					this.OnRoadCodeChanged();
				}
			}
		}
		
		[Column(Name="VEJ_NAVN", Storage="_RoadName", DbType="Char(20)")]
		public string RoadName
		{
			get
			{
				return this._RoadName;
			}
			set
			{
				if ((this._RoadName != value))
				{
					this.OnRoadNameChanging(value);
					this.SendPropertyChanging();
					this._RoadName = value;
					this.SendPropertyChanged("RoadName");
					this.OnRoadNameChanged();
				}
			}
		}
		
		[Column(Name="HUS_NUMMER", Storage="_HouseNumber", DbType="Char(4)")]
		public string HouseNumber
		{
			get
			{
				return this._HouseNumber;
			}
			set
			{
				if ((this._HouseNumber != value))
				{
					this.OnHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._HouseNumber = value;
					this.SendPropertyChanged("HouseNumber");
					this.OnHouseNumberChanged();
				}
			}
		}
		
		[Column(Name="ETAGE", Storage="_Floor", DbType="Char(2)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[Column(Name="SIDE_DORNR", Storage="_Door", DbType="Char(4)")]
		public string Door
		{
			get
			{
				return this._Door;
			}
			set
			{
				if ((this._Door != value))
				{
					this.OnDoorChanging(value);
					this.SendPropertyChanging();
					this._Door = value;
					this.SendPropertyChanged("Door");
					this.OnDoorChanged();
				}
			}
		}
		
		[Column(Name="BYNAVN", Storage="_CityName", DbType="Char(34)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[Column(Name="POSTNR", Storage="_PostCode", DbType="SmallInt")]
		public System.Nullable<short> PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[Column(Name="POSTDISTRIKT", Storage="_PostDistrict", DbType="Char(20)")]
		public string PostDistrict
		{
			get
			{
				return this._PostDistrict;
			}
			set
			{
				if ((this._PostDistrict != value))
				{
					this.OnPostDistrictChanging(value);
					this.SendPropertyChanging();
					this._PostDistrict = value;
					this.SendPropertyChanged("PostDistrict");
					this.OnPostDistrictChanged();
				}
			}
		}
		
		[Association(Name="Citizen_CitizenPotReadyAddress", Storage="_Citizen", ThisKey="PNR", OtherKey="PNR", IsForeignKey=true)]
		public Citizen Citizen
		{
			get
			{
				return this._Citizen.Entity;
			}
			set
			{
				Citizen previousValue = this._Citizen.Entity;
				if (((previousValue != value) 
							|| (this._Citizen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Citizen.Entity = null;
						previousValue.CitizenPotReadyAddresses.Remove(this);
					}
					this._Citizen.Entity = value;
					if ((value != null))
					{
						value.CitizenPotReadyAddresses.Add(this);
						this._PNR = value.PNR;
					}
					else
					{
						this._PNR = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Citizen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Børnetabel")]
	public partial class Child : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _PNR;
		
		private System.Nullable<decimal> _MotherPNR;
		
		private System.Nullable<decimal> _FatherPNR;
		
		private string _MotherDocument;
		
		private string _FatherDocument;
		
		private System.Nullable<short> _CitizenStatusCode;
		
		private EntityRef<Citizen> _Mother;
		
		private EntityRef<Citizen> _Father;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPNRChanging(System.Nullable<decimal> value);
    partial void OnPNRChanged();
    partial void OnMotherPNRChanging(System.Nullable<decimal> value);
    partial void OnMotherPNRChanged();
    partial void OnFatherPNRChanging(System.Nullable<decimal> value);
    partial void OnFatherPNRChanged();
    partial void OnMotherDocumentChanging(string value);
    partial void OnMotherDocumentChanged();
    partial void OnFatherDocumentChanging(string value);
    partial void OnFatherDocumentChanged();
    partial void OnCitizenStatusCodeChanging(System.Nullable<short> value);
    partial void OnCitizenStatusCodeChanged();
    #endregion
		
		public Child()
		{
			this._Mother = default(EntityRef<Citizen>);
			this._Father = default(EntityRef<Citizen>);
			OnCreated();
		}
		
		[Column(Name="PERSONNUMMER", Storage="_PNR", DbType="Decimal(11,0)", IsPrimaryKey=true)]
		public System.Nullable<decimal> PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					this.OnPNRChanging(value);
					this.SendPropertyChanging();
					this._PNR = value;
					this.SendPropertyChanged("PNR");
					this.OnPNRChanged();
				}
			}
		}
		
		[Column(Name="PERSONNUMMER_MOR", Storage="_MotherPNR", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> MotherPNR
		{
			get
			{
				return this._MotherPNR;
			}
			set
			{
				if ((this._MotherPNR != value))
				{
					this.OnMotherPNRChanging(value);
					this.SendPropertyChanging();
					this._MotherPNR = value;
					this.SendPropertyChanged("MotherPNR");
					this.OnMotherPNRChanged();
				}
			}
		}
		
		[Column(Name="PERSONNUMMER_FAR", Storage="_FatherPNR", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> FatherPNR
		{
			get
			{
				return this._FatherPNR;
			}
			set
			{
				if ((this._FatherPNR != value))
				{
					this.OnFatherPNRChanging(value);
					this.SendPropertyChanging();
					this._FatherPNR = value;
					this.SendPropertyChanged("FatherPNR");
					this.OnFatherPNRChanged();
				}
			}
		}
		
		[Column(Name="MOR_DOK", Storage="_MotherDocument", DbType="Char(3)")]
		public string MotherDocument
		{
			get
			{
				return this._MotherDocument;
			}
			set
			{
				if ((this._MotherDocument != value))
				{
					this.OnMotherDocumentChanging(value);
					this.SendPropertyChanging();
					this._MotherDocument = value;
					this.SendPropertyChanged("MotherDocument");
					this.OnMotherDocumentChanged();
				}
			}
		}
		
		[Column(Name="FAR_DOK", Storage="_FatherDocument", DbType="Char(3)")]
		public string FatherDocument
		{
			get
			{
				return this._FatherDocument;
			}
			set
			{
				if ((this._FatherDocument != value))
				{
					this.OnFatherDocumentChanging(value);
					this.SendPropertyChanging();
					this._FatherDocument = value;
					this.SendPropertyChanged("FatherDocument");
					this.OnFatherDocumentChanged();
				}
			}
		}
		
		[Column(Name="BORGERSTATUS_KODE", Storage="_CitizenStatusCode", DbType="SmallInt")]
		public System.Nullable<short> CitizenStatusCode
		{
			get
			{
				return this._CitizenStatusCode;
			}
			set
			{
				if ((this._CitizenStatusCode != value))
				{
					this.OnCitizenStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._CitizenStatusCode = value;
					this.SendPropertyChanged("CitizenStatusCode");
					this.OnCitizenStatusCodeChanged();
				}
			}
		}
		
		[Association(Name="Citizen_Child", Storage="_Mother", ThisKey="MotherPNR", OtherKey="PNR", IsForeignKey=true)]
		public Citizen Mother
		{
			get
			{
				return this._Mother.Entity;
			}
			set
			{
				Citizen previousValue = this._Mother.Entity;
				if (((previousValue != value) 
							|| (this._Mother.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mother.Entity = null;
						previousValue.ChildrenAsMother.Remove(this);
					}
					this._Mother.Entity = value;
					if ((value != null))
					{
						value.ChildrenAsMother.Add(this);
						this._MotherPNR = value.PNR;
					}
					else
					{
						this._MotherPNR = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Mother");
				}
			}
		}
		
		[Association(Name="Citizen_Child1", Storage="_Father", ThisKey="FatherPNR", OtherKey="PNR", IsForeignKey=true)]
		public Citizen Father
		{
			get
			{
				return this._Father.Entity;
			}
			set
			{
				Citizen previousValue = this._Father.Entity;
				if (((previousValue != value) 
							|| (this._Father.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Father.Entity = null;
						previousValue.ChildrenAsFather.Remove(this);
					}
					this._Father.Entity = value;
					if ((value != null))
					{
						value.ChildrenAsFather.Add(this);
						this._FatherPNR = value.PNR;
					}
					else
					{
						this._FatherPNR = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Father");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Bosættelse")]
	public partial class Resettlement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<short> _MunicipalityCode;
		
		private System.Nullable<decimal> _PNR;
		
		private System.Nullable<System.DateTime> _ArrivalTimestamp;
		
		private System.Nullable<short> _RoadCode;
		
		private string _HouseNumber;
		
		private string _Floor;
		
		private string _Door;
		
		private string _BuildingNumber;
		
		private System.Nullable<System.DateTime> _DepartureTimestamp;
		
		private System.Nullable<char> _AddressCorrectionMarker;
		
		private string _CareOfName;
		
		private System.Nullable<System.DateTime> _MunicipalityDepartureDate;
		
		private System.Nullable<short> _DepartureMunicipalityCode;
		
		private System.Nullable<System.DateTime> _MunicipalityArrivalDate;
		
		private System.Nullable<System.DateTime> _CprResettlementTimestamp;
		
		private System.Nullable<char> _OddEvenRoadSide;
		
		private System.Nullable<char> _ArrivalMarker;
		
		private System.Nullable<char> _ArrivalTimestampUncertainty;
		
		private System.Nullable<char> _DepartureTimestampUncertainty;
		
		private System.Nullable<char> _MunicipalityArrivalDateUncertainty;
		
		private System.Nullable<char> _MunicipalityDepartureDateUncertainty;
		
		private EntityRef<Citizen> _Citizen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMunicipalityCodeChanging(System.Nullable<short> value);
    partial void OnMunicipalityCodeChanged();
    partial void OnPNRChanging(System.Nullable<decimal> value);
    partial void OnPNRChanged();
    partial void OnArrivalTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnArrivalTimestampChanged();
    partial void OnRoadCodeChanging(System.Nullable<short> value);
    partial void OnRoadCodeChanged();
    partial void OnHouseNumberChanging(string value);
    partial void OnHouseNumberChanged();
    partial void OnFloorChanging(string value);
    partial void OnFloorChanged();
    partial void OnDoorChanging(string value);
    partial void OnDoorChanged();
    partial void OnBuildingNumberChanging(string value);
    partial void OnBuildingNumberChanged();
    partial void OnDepartureTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnDepartureTimestampChanged();
    partial void OnAddressCorrectionMarkerChanging(System.Nullable<char> value);
    partial void OnAddressCorrectionMarkerChanged();
    partial void OnCareOfNameChanging(string value);
    partial void OnCareOfNameChanged();
    partial void OnMunicipalityDepartureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMunicipalityDepartureDateChanged();
    partial void OnDepartureMunicipalityCodeChanging(System.Nullable<short> value);
    partial void OnDepartureMunicipalityCodeChanged();
    partial void OnMunicipalityArrivalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMunicipalityArrivalDateChanged();
    partial void OnCprResettlementTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnCprResettlementTimestampChanged();
    partial void OnOddEvenRoadSideChanging(System.Nullable<char> value);
    partial void OnOddEvenRoadSideChanged();
    partial void OnArrivalMarkerChanging(System.Nullable<char> value);
    partial void OnArrivalMarkerChanged();
    partial void OnArrivalTimestampUncertaintyChanging(System.Nullable<char> value);
    partial void OnArrivalTimestampUncertaintyChanged();
    partial void OnDepartureTimestampUncertaintyChanging(System.Nullable<char> value);
    partial void OnDepartureTimestampUncertaintyChanged();
    partial void OnMunicipalityArrivalDateUncertaintyChanging(System.Nullable<char> value);
    partial void OnMunicipalityArrivalDateUncertaintyChanged();
    partial void OnMunicipalityDepartureDateUncertaintyChanging(System.Nullable<char> value);
    partial void OnMunicipalityDepartureDateUncertaintyChanged();
    #endregion
		
		public Resettlement()
		{
			this._Citizen = default(EntityRef<Citizen>);
			OnCreated();
		}
		
		[Column(Name="KOMMUNENUMMER", Storage="_MunicipalityCode", DbType="SmallInt")]
		public System.Nullable<short> MunicipalityCode
		{
			get
			{
				return this._MunicipalityCode;
			}
			set
			{
				if ((this._MunicipalityCode != value))
				{
					this.OnMunicipalityCodeChanging(value);
					this.SendPropertyChanging();
					this._MunicipalityCode = value;
					this.SendPropertyChanged("MunicipalityCode");
					this.OnMunicipalityCodeChanged();
				}
			}
		}
		
		[Column(Name="PERSONNUMMER", Storage="_PNR", DbType="Decimal(11,0)", IsPrimaryKey=true)]
		public System.Nullable<decimal> PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					this.OnPNRChanging(value);
					this.SendPropertyChanging();
					this._PNR = value;
					this.SendPropertyChanged("PNR");
					this.OnPNRChanged();
				}
			}
		}
		
		[Column(Name="ADR_TILFLYT_TS", Storage="_ArrivalTimestamp", DbType="DateTime", IsPrimaryKey=true)]
		public System.Nullable<System.DateTime> ArrivalTimestamp
		{
			get
			{
				return this._ArrivalTimestamp;
			}
			set
			{
				if ((this._ArrivalTimestamp != value))
				{
					this.OnArrivalTimestampChanging(value);
					this.SendPropertyChanging();
					this._ArrivalTimestamp = value;
					this.SendPropertyChanged("ArrivalTimestamp");
					this.OnArrivalTimestampChanged();
				}
			}
		}
		
		[Column(Name="VEJ_KODE", Storage="_RoadCode", DbType="SmallInt")]
		public System.Nullable<short> RoadCode
		{
			get
			{
				return this._RoadCode;
			}
			set
			{
				if ((this._RoadCode != value))
				{
					this.OnRoadCodeChanging(value);
					this.SendPropertyChanging();
					this._RoadCode = value;
					this.SendPropertyChanged("RoadCode");
					this.OnRoadCodeChanged();
				}
			}
		}
		
		[Column(Name="HUS_NUMMER", Storage="_HouseNumber", DbType="Char(4)")]
		public string HouseNumber
		{
			get
			{
				return this._HouseNumber;
			}
			set
			{
				if ((this._HouseNumber != value))
				{
					this.OnHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._HouseNumber = value;
					this.SendPropertyChanged("HouseNumber");
					this.OnHouseNumberChanged();
				}
			}
		}
		
		[Column(Name="ETAGE", Storage="_Floor", DbType="Char(2)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[Column(Name="SIDE_DORNR", Storage="_Door", DbType="Char(4)")]
		public string Door
		{
			get
			{
				return this._Door;
			}
			set
			{
				if ((this._Door != value))
				{
					this.OnDoorChanging(value);
					this.SendPropertyChanging();
					this._Door = value;
					this.SendPropertyChanged("Door");
					this.OnDoorChanged();
				}
			}
		}
		
		[Column(Name="BYGNING_NUMMER", Storage="_BuildingNumber", DbType="Char(4)")]
		public string BuildingNumber
		{
			get
			{
				return this._BuildingNumber;
			}
			set
			{
				if ((this._BuildingNumber != value))
				{
					this.OnBuildingNumberChanging(value);
					this.SendPropertyChanging();
					this._BuildingNumber = value;
					this.SendPropertyChanged("BuildingNumber");
					this.OnBuildingNumberChanged();
				}
			}
		}
		
		[Column(Name="ADR_FRAFLYT_TS", Storage="_DepartureTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DepartureTimestamp
		{
			get
			{
				return this._DepartureTimestamp;
			}
			set
			{
				if ((this._DepartureTimestamp != value))
				{
					this.OnDepartureTimestampChanging(value);
					this.SendPropertyChanging();
					this._DepartureTimestamp = value;
					this.SendPropertyChanged("DepartureTimestamp");
					this.OnDepartureTimestampChanged();
				}
			}
		}
		
		[Column(Name="ADRESSE_KORR_MRK", Storage="_AddressCorrectionMarker", DbType="Char(1)")]
		public System.Nullable<char> AddressCorrectionMarker
		{
			get
			{
				return this._AddressCorrectionMarker;
			}
			set
			{
				if ((this._AddressCorrectionMarker != value))
				{
					this.OnAddressCorrectionMarkerChanging(value);
					this.SendPropertyChanging();
					this._AddressCorrectionMarker = value;
					this.SendPropertyChanged("AddressCorrectionMarker");
					this.OnAddressCorrectionMarkerChanged();
				}
			}
		}
		
		[Column(Name="CO_NAVN", Storage="_CareOfName", DbType="Char(34)")]
		public string CareOfName
		{
			get
			{
				return this._CareOfName;
			}
			set
			{
				if ((this._CareOfName != value))
				{
					this.OnCareOfNameChanging(value);
					this.SendPropertyChanging();
					this._CareOfName = value;
					this.SendPropertyChanged("CareOfName");
					this.OnCareOfNameChanged();
				}
			}
		}
		
		[Column(Name="KOM_FRAFLYTDATO", Storage="_MunicipalityDepartureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MunicipalityDepartureDate
		{
			get
			{
				return this._MunicipalityDepartureDate;
			}
			set
			{
				if ((this._MunicipalityDepartureDate != value))
				{
					this.OnMunicipalityDepartureDateChanging(value);
					this.SendPropertyChanging();
					this._MunicipalityDepartureDate = value;
					this.SendPropertyChanged("MunicipalityDepartureDate");
					this.OnMunicipalityDepartureDateChanged();
				}
			}
		}
		
		[Column(Name="FRAFLYT_KOMMUNENR", Storage="_DepartureMunicipalityCode", DbType="SmallInt")]
		public System.Nullable<short> DepartureMunicipalityCode
		{
			get
			{
				return this._DepartureMunicipalityCode;
			}
			set
			{
				if ((this._DepartureMunicipalityCode != value))
				{
					this.OnDepartureMunicipalityCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartureMunicipalityCode = value;
					this.SendPropertyChanged("DepartureMunicipalityCode");
					this.OnDepartureMunicipalityCodeChanged();
				}
			}
		}
		
		[Column(Name="KOM_TILFLYTDATO", Storage="_MunicipalityArrivalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MunicipalityArrivalDate
		{
			get
			{
				return this._MunicipalityArrivalDate;
			}
			set
			{
				if ((this._MunicipalityArrivalDate != value))
				{
					this.OnMunicipalityArrivalDateChanging(value);
					this.SendPropertyChanging();
					this._MunicipalityArrivalDate = value;
					this.SendPropertyChanged("MunicipalityArrivalDate");
					this.OnMunicipalityArrivalDateChanged();
				}
			}
		}
		
		[Column(Name="CPR_BOSAT_TS", Storage="_CprResettlementTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> CprResettlementTimestamp
		{
			get
			{
				return this._CprResettlementTimestamp;
			}
			set
			{
				if ((this._CprResettlementTimestamp != value))
				{
					this.OnCprResettlementTimestampChanging(value);
					this.SendPropertyChanging();
					this._CprResettlementTimestamp = value;
					this.SendPropertyChanged("CprResettlementTimestamp");
					this.OnCprResettlementTimestampChanged();
				}
			}
		}
		
		[Column(Name="VEJSIDE_F_LIG_ULIG", Storage="_OddEvenRoadSide", DbType="Char(1)")]
		public System.Nullable<char> OddEvenRoadSide
		{
			get
			{
				return this._OddEvenRoadSide;
			}
			set
			{
				if ((this._OddEvenRoadSide != value))
				{
					this.OnOddEvenRoadSideChanging(value);
					this.SendPropertyChanging();
					this._OddEvenRoadSide = value;
					this.SendPropertyChanged("OddEvenRoadSide");
					this.OnOddEvenRoadSideChanged();
				}
			}
		}
		
		[Column(Name="ADR_TILFLYT_MRK", Storage="_ArrivalMarker", DbType="Char(1)")]
		public System.Nullable<char> ArrivalMarker
		{
			get
			{
				return this._ArrivalMarker;
			}
			set
			{
				if ((this._ArrivalMarker != value))
				{
					this.OnArrivalMarkerChanging(value);
					this.SendPropertyChanging();
					this._ArrivalMarker = value;
					this.SendPropertyChanged("ArrivalMarker");
					this.OnArrivalMarkerChanged();
				}
			}
		}
		
		[Column(Name="ADR_TILFLYT_UM", Storage="_ArrivalTimestampUncertainty", DbType="Char(1)")]
		public System.Nullable<char> ArrivalTimestampUncertainty
		{
			get
			{
				return this._ArrivalTimestampUncertainty;
			}
			set
			{
				if ((this._ArrivalTimestampUncertainty != value))
				{
					this.OnArrivalTimestampUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._ArrivalTimestampUncertainty = value;
					this.SendPropertyChanged("ArrivalTimestampUncertainty");
					this.OnArrivalTimestampUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="ADR_FRAFLYT_UM", Storage="_DepartureTimestampUncertainty", DbType="Char(1)")]
		public System.Nullable<char> DepartureTimestampUncertainty
		{
			get
			{
				return this._DepartureTimestampUncertainty;
			}
			set
			{
				if ((this._DepartureTimestampUncertainty != value))
				{
					this.OnDepartureTimestampUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._DepartureTimestampUncertainty = value;
					this.SendPropertyChanged("DepartureTimestampUncertainty");
					this.OnDepartureTimestampUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="KOM_TILFLYT_UM", Storage="_MunicipalityArrivalDateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> MunicipalityArrivalDateUncertainty
		{
			get
			{
				return this._MunicipalityArrivalDateUncertainty;
			}
			set
			{
				if ((this._MunicipalityArrivalDateUncertainty != value))
				{
					this.OnMunicipalityArrivalDateUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._MunicipalityArrivalDateUncertainty = value;
					this.SendPropertyChanged("MunicipalityArrivalDateUncertainty");
					this.OnMunicipalityArrivalDateUncertaintyChanged();
				}
			}
		}
		
		[Column(Name="KOM_FRAFLYT_UM", Storage="_MunicipalityDepartureDateUncertainty", DbType="Char(1)")]
		public System.Nullable<char> MunicipalityDepartureDateUncertainty
		{
			get
			{
				return this._MunicipalityDepartureDateUncertainty;
			}
			set
			{
				if ((this._MunicipalityDepartureDateUncertainty != value))
				{
					this.OnMunicipalityDepartureDateUncertaintyChanging(value);
					this.SendPropertyChanging();
					this._MunicipalityDepartureDateUncertainty = value;
					this.SendPropertyChanged("MunicipalityDepartureDateUncertainty");
					this.OnMunicipalityDepartureDateUncertaintyChanged();
				}
			}
		}
		
		[Association(Name="Citizen_Resettlement", Storage="_Citizen", ThisKey="PNR", OtherKey="PNR", IsForeignKey=true)]
		public Citizen Citizen
		{
			get
			{
				return this._Citizen.Entity;
			}
			set
			{
				Citizen previousValue = this._Citizen.Entity;
				if (((previousValue != value) 
							|| (this._Citizen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Citizen.Entity = null;
						previousValue.Resettlements.Remove(this);
					}
					this._Citizen.Entity = value;
					if ((value != null))
					{
						value.Resettlements.Add(this);
						this._PNR = value.PNR;
					}
					else
					{
						this._PNR = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Citizen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
