#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CprBroker.Providers.CPRDirect
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PART")]
	public partial class ExtractDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertExtract(Extract instance);
    partial void UpdateExtract(Extract instance);
    partial void DeleteExtract(Extract instance);
    partial void InsertExtractItem(ExtractItem instance);
    partial void UpdateExtractItem(ExtractItem instance);
    partial void DeleteExtractItem(ExtractItem instance);
    #endregion
		
		public ExtractDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtractDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtractDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtractDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Extract> Extracts
		{
			get
			{
				return this.GetTable<Extract>();
			}
		}
		
		public System.Data.Linq.Table<ExtractItem> ExtractItems
		{
			get
			{
				return this.GetTable<ExtractItem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Extract")]
	public partial class Extract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ExtractId;
		
		private System.DateTime _ExtractDate;
		
		private System.DateTime _ImportDate;
		
		private string _StartRecord;
		
		private string _EndRecord;
		
		private EntitySet<ExtractItem> _ExtractItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtractIdChanging(System.Guid value);
    partial void OnExtractIdChanged();
    partial void OnExtractDateChanging(System.DateTime value);
    partial void OnExtractDateChanged();
    partial void OnImportDateChanging(System.DateTime value);
    partial void OnImportDateChanged();
    partial void OnStartRecordChanging(string value);
    partial void OnStartRecordChanged();
    partial void OnEndRecordChanging(string value);
    partial void OnEndRecordChanged();
    #endregion
		
		public Extract()
		{
			this._ExtractItems = new EntitySet<ExtractItem>(new Action<ExtractItem>(this.attach_ExtractItems), new Action<ExtractItem>(this.detach_ExtractItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtractId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ExtractId
		{
			get
			{
				return this._ExtractId;
			}
			set
			{
				if ((this._ExtractId != value))
				{
					this.OnExtractIdChanging(value);
					this.SendPropertyChanging();
					this._ExtractId = value;
					this.SendPropertyChanged("ExtractId");
					this.OnExtractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtractDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExtractDate
		{
			get
			{
				return this._ExtractDate;
			}
			set
			{
				if ((this._ExtractDate != value))
				{
					this.OnExtractDateChanging(value);
					this.SendPropertyChanging();
					this._ExtractDate = value;
					this.SendPropertyChanged("ExtractDate");
					this.OnExtractDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportDate", DbType="DateTime NOT NULL")]
		public System.DateTime ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartRecord", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StartRecord
		{
			get
			{
				return this._StartRecord;
			}
			set
			{
				if ((this._StartRecord != value))
				{
					this.OnStartRecordChanging(value);
					this.SendPropertyChanging();
					this._StartRecord = value;
					this.SendPropertyChanged("StartRecord");
					this.OnStartRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndRecord", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EndRecord
		{
			get
			{
				return this._EndRecord;
			}
			set
			{
				if ((this._EndRecord != value))
				{
					this.OnEndRecordChanging(value);
					this.SendPropertyChanging();
					this._EndRecord = value;
					this.SendPropertyChanged("EndRecord");
					this.OnEndRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Extract_ExtractItem", Storage="_ExtractItems", ThisKey="ExtractId", OtherKey="ExtractId")]
		public EntitySet<ExtractItem> ExtractItems
		{
			get
			{
				return this._ExtractItems;
			}
			set
			{
				this._ExtractItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExtractItems(ExtractItem entity)
		{
			this.SendPropertyChanging();
			entity.Extract = this;
		}
		
		private void detach_ExtractItems(ExtractItem entity)
		{
			this.SendPropertyChanging();
			entity.Extract = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtractItem")]
	public partial class ExtractItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ExtractItemId;
		
		private System.Guid _ExtractId;
		
		private string _PNR;
		
		private string _RelationPNR;
		
		private string _DataTypeCode;
		
		private string _Contents;
		
		private EntityRef<Extract> _Extract;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtractItemIdChanging(System.Guid value);
    partial void OnExtractItemIdChanged();
    partial void OnExtractIdChanging(System.Guid value);
    partial void OnExtractIdChanged();
    partial void OnPNRChanging(string value);
    partial void OnPNRChanged();
    partial void OnRelationPNRChanging(string value);
    partial void OnRelationPNRChanged();
    partial void OnDataTypeCodeChanging(string value);
    partial void OnDataTypeCodeChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    #endregion
		
		public ExtractItem()
		{
			this._Extract = default(EntityRef<Extract>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtractItemId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ExtractItemId
		{
			get
			{
				return this._ExtractItemId;
			}
			set
			{
				if ((this._ExtractItemId != value))
				{
					this.OnExtractItemIdChanging(value);
					this.SendPropertyChanging();
					this._ExtractItemId = value;
					this.SendPropertyChanged("ExtractItemId");
					this.OnExtractItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtractId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ExtractId
		{
			get
			{
				return this._ExtractId;
			}
			set
			{
				if ((this._ExtractId != value))
				{
					if (this._Extract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtractIdChanging(value);
					this.SendPropertyChanging();
					this._ExtractId = value;
					this.SendPropertyChanged("ExtractId");
					this.OnExtractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNR", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					this.OnPNRChanging(value);
					this.SendPropertyChanging();
					this._PNR = value;
					this.SendPropertyChanged("PNR");
					this.OnPNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationPNR", DbType="VarChar(10)")]
		public string RelationPNR
		{
			get
			{
				return this._RelationPNR;
			}
			set
			{
				if ((this._RelationPNR != value))
				{
					this.OnRelationPNRChanging(value);
					this.SendPropertyChanging();
					this._RelationPNR = value;
					this.SendPropertyChanged("RelationPNR");
					this.OnRelationPNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataTypeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DataTypeCode
		{
			get
			{
				return this._DataTypeCode;
			}
			set
			{
				if ((this._DataTypeCode != value))
				{
					this.OnDataTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._DataTypeCode = value;
					this.SendPropertyChanged("DataTypeCode");
					this.OnDataTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Extract_ExtractItem", Storage="_Extract", ThisKey="ExtractId", OtherKey="ExtractId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extract Extract
		{
			get
			{
				return this._Extract.Entity;
			}
			set
			{
				Extract previousValue = this._Extract.Entity;
				if (((previousValue != value) 
							|| (this._Extract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extract.Entity = null;
						previousValue.ExtractItems.Remove(this);
					}
					this._Extract.Entity = value;
					if ((value != null))
					{
						value.ExtractItems.Add(this);
						this._ExtractId = value.ExtractId;
					}
					else
					{
						this._ExtractId = default(System.Guid);
					}
					this.SendPropertyChanged("Extract");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
