@using CprBroker.Web.Controllers;
@using CprBroker.Data.Applications;

@section Head {
    <script type="text/javascript" src='@Href("~/Scripts/moment.min.js")'></script>
    <!-- Include Date Range Picker -->
    <script type="text/javascript" src='@Href("~/Scripts/daterangepicker.js")'></script>
    <link rel="stylesheet" type="text/css" href='@Href("~/Content/daterangepicker.css")' />

    <script type="text/javascript" src='@Href("~/Scripts/bootstrap-select.js")'></script>
    <link rel="stylesheet" type="text/css" href='@Href("~/Content/bootstrap-select.css")' />
}


@section Left{

    <h2>Filters</h2>
    <br />

    <!-- Date range -->
    @{
        var dateFormat = "DD MMM YYYY";
    }
    <div id="daterange" class="pull-right" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
        <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>&nbsp;
        <span></span> <b class="caret"></b>
    </div>
    <script type="text/javascript">
        $(function () {

            $.loadActivities = function (pageNumber) {
                if (!pageNumber)
                    pageNumber = 0;

                console.info($('#daterange').data('daterangepicker').startDate);
                var url = '@Url.Action("ActivityList", "LogDisplay")';

                var s = $('#daterange').data('daterangepicker').startDate.format('YYYY-MM-DD');
                var e = $('#daterange').data('daterangepicker').endDate.format('YYYY-MM-DD');

                var cArr = [];
                $('#contains option:selected').each(function (i, selected) {
                    cArr[i] = $(selected).text();
                });

                var c = cArr.join(',');

                var aArr = [];
                $('#application option:selected').each(function (i, selected) {
                    aArr[i] = $(selected).val();
                });
                var a = aArr.join(',');

                url = url
                    + '?'
                    + 'From=' + s
                    + '&To=' + e
                    + '&Contains=' + c
                    + '&ApplicationId=' + a
                    + '&PageSize=' + '5'
                    + '&PageNumber=' + pageNumber
                    + '';

                console.info(url);
                console.info(s);
                console.info(e);
                $('#ActivityList').load(url);
            };

            var start = moment();
            var end = moment();

            function cb(start, end, selectionText, doNotReload) {
                txt = start.format('@dateFormat') + ' <br> ' + end.format('@dateFormat');
                if (selectionText)
                    txt = selectionText + '<br>' + txt
                $('#daterange span').html(txt);
                console.info(doNotReload);
                if (!doNotReload)
                    $.loadActivities();
            }

            $('#daterange').daterangepicker(
            {
                locale: {
                    format: '@dateFormat'
                },
                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                dateLimit: {
                    months: 3
                },
            },
            cb
            );


            $('#contains').on('change', function () {
                $.loadActivities();
            })

            $('#application').on('change', function () {
                $.loadActivities();
            })

            // Fill initial values
            cb(start, end, null, true);

            // Finally, make the first data load
            $.loadActivities();
        });
    </script>
    <br />
    <br />
    <br />

    <!-- Type -->
    <select id='contains' multiple class="selectpicker" title="Having..." data-style="" data-width="100%">
        @foreach (var opt in Enum.GetValues(typeof(ActivityContentTypes)))
        {
            if ((int)opt > 0)
            {
                <option>@opt</option>
            }
        }
    </select>
    <br />
    <br />
    <!-- Aplication -->
    @{
        CprBroker.Data.Applications.Application[] applications;
        using (var dataContext = new ApplicationDataContext())
        {
            applications = dataContext.Applications.OrderBy(a => a.Name).ToArray();
        }
    }
    <select id="application" class="selectpicker" title="Application" data-style="btn-primary" data-width="100%">
        <option selected value="">(All)</option>
        @foreach (CprBroker.Data.Applications.Application app in applications)
        {
            <option value="@app.ApplicationId">@app.Name</option>
        }
    </select>
}

<span id="ActivityList"></span>
