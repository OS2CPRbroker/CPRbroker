@model Tuple<CprBroker.Engine.ISubscriptionManagerDataProvider, Guid, string>

@{
    var field = Model.Item3;
    var fieldSubscriptions = @Model.Item1.GetSubscriptions(field);
    var fieldLookups = Model.Item1.EnumerateField(field);
    if (fieldSubscriptions == null)
        fieldSubscriptions = new string[0];
}

@if (fieldLookups != null)
{
    <div class="row col-sm-9 col-sm-pull-0">
        @{
    var fieldLookupArray = fieldLookups.ToArray();
    if (fieldLookupArray.Where(o => o.Value.Length > 30).Count() > 0)
    {
        fieldLookupArray = fieldLookupArray.OrderBy(f => f.Value.Length).ToArray();
    }
        }
        @foreach (var fieldLookup in fieldLookupArray)
        {
            <div class="col-sm-3">
                @{var id = field.Trim() + "_" + @fieldLookup.Key;}
                <input type="checkbox" name="chkSubscription" checked="@fieldSubscriptions.Contains(fieldLookup.Key)" value="@fieldLookup.Key" id="@id" field="@field" />
                <label for=@id style="overflow-wrap:break-word">@fieldLookup.Value</label>
            </div>
        }
    </div>
}
else
{
    if (fieldSubscriptions == null || fieldSubscriptions.Length == 0)
    {
        Output.Write("(None)");
    }
    else
    {
        <div class="row col-sm-9 col-sm-pull-0">
            @foreach (var fieldSubscription in fieldSubscriptions)
            {
                <div class="col-sm-3">
                    @fieldSubscription
                    <button type="button" class="btn btn-default btn-sm" name="removeSubscription" field="@field" fieldvalue="@fieldSubscription">
                        <span class="glyphicon glyphicon-minus"></span>
                    </button>
                </div>
            }
        </div>
    }
    var addTextBoxId = field.Replace(" ", "") + "_new";
    <br /><br />
    <div class="row col-sm-9 col-sm-pull-0">
        <input type="text" id="@addTextBoxId" field="@field" class="input-sm" />
        <button class="btn btn-default btn-sm" textboxid="@addTextBoxId" name="addSubscription">
            <span class="glyphicon glyphicon-plus"></span>
        </button>
    </div>
}
