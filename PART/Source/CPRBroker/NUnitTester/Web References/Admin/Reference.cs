//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3615.
// 
#pragma warning disable 1591

namespace CprBroker.NUnitTester.Admin {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdminSoap12", Namespace="http://dk.itst")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceVersionType[]))]
    public partial class Admin : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private ApplicationHeader applicationHeaderValueField;
        
        private System.Threading.SendOrPostCallback RequestAppRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveAppRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAppRegistrationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnregisterAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCapabilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsImplementingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataProviderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDataProviderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOperationCompleted;
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Admin() {
            this.SoapVersion = System.Web.Services.Protocols.SoapProtocolVersion.Soap12;
            this.Url = "http://localhost:1551/services/Admin.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public ApplicationHeader ApplicationHeaderValue {
            get {
                return this.applicationHeaderValueField;
            }
            set {
                this.applicationHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RequestAppRegistrationCompletedEventHandler RequestAppRegistrationCompleted;
        
        /// <remarks/>
        public event ApproveAppRegistrationCompletedEventHandler ApproveAppRegistrationCompleted;
        
        /// <remarks/>
        public event ListAppRegistrationsCompletedEventHandler ListAppRegistrationsCompleted;
        
        /// <remarks/>
        public event UnregisterAppCompletedEventHandler UnregisterAppCompleted;
        
        /// <remarks/>
        public event GetCapabilitiesCompletedEventHandler GetCapabilitiesCompleted;
        
        /// <remarks/>
        public event IsImplementingCompletedEventHandler IsImplementingCompleted;
        
        /// <remarks/>
        public event GetDataProviderListCompletedEventHandler GetDataProviderListCompleted;
        
        /// <remarks/>
        public event SetDataProviderListCompletedEventHandler SetDataProviderListCompleted;
        
        /// <remarks/>
        public event LogCompletedEventHandler LogCompleted;
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ApplicationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dk.itst/RequestAppRegistration", RequestNamespace="http://dk.itst", ResponseNamespace="http://dk.itst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Application", Namespace="http://rep.oio.dk/cpr.dk/xml/schemas/2009/07/01/")]
        public ApplicationType RequestAppRegistration(string ApplicationName) {
            object[] results = this.Invoke("RequestAppRegistration", new object[] {
                        ApplicationName});
            return ((ApplicationType)(results[0]));
        }
        
        /// <remarks/>
        public void RequestAppRegistrationAsync(string ApplicationName) {
            this.RequestAppRegistrationAsync(ApplicationName, null);
        }
        
        /// <remarks/>
        public void RequestAppRegistrationAsync(string ApplicationName, object userState) {
            if ((this.RequestAppRegistrationOperationCompleted == null)) {
                this.RequestAppRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestAppRegistrationOperationCompleted);
            }
            this.InvokeAsync("RequestAppRegistration", new object[] {
                        ApplicationName}, this.RequestAppRegistrationOperationCompleted, userState);
        }
        
        private void OnRequestAppRegistrationOperationCompleted(object arg) {
            if ((this.RequestAppRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestAppRegistrationCompleted(this, new RequestAppRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ApplicationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dk.itst/ApproveAppRegistration", RequestNamespace="http://dk.itst", ResponseNamespace="http://dk.itst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ApproveAppRegistration(string ApplicationToken) {
            object[] results = this.Invoke("ApproveAppRegistration", new object[] {
                        ApplicationToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveAppRegistrationAsync(string ApplicationToken) {
            this.ApproveAppRegistrationAsync(ApplicationToken, null);
        }
        
        /// <remarks/>
        public void ApproveAppRegistrationAsync(string ApplicationToken, object userState) {
            if ((this.ApproveAppRegistrationOperationCompleted == null)) {
                this.ApproveAppRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveAppRegistrationOperationCompleted);
            }
            this.InvokeAsync("ApproveAppRegistration", new object[] {
                        ApplicationToken}, this.ApproveAppRegistrationOperationCompleted, userState);
        }
        
        private void OnApproveAppRegistrationOperationCompleted(object arg) {
            if ((this.ApproveAppRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveAppRegistrationCompleted(this, new ApproveAppRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ApplicationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dk.itst/ListAppRegistrations", RequestNamespace="http://dk.itst", ResponseNamespace="http://dk.itst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApplicationType[] ListAppRegistrations() {
            object[] results = this.Invoke("ListAppRegistrations", new object[0]);
            return ((ApplicationType[])(results[0]));
        }
        
        /// <remarks/>
        public void ListAppRegistrationsAsync() {
            this.ListAppRegistrationsAsync(null);
        }
        
        /// <remarks/>
        public void ListAppRegistrationsAsync(object userState) {
            if ((this.ListAppRegistrationsOperationCompleted == null)) {
                this.ListAppRegistrationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAppRegistrationsOperationCompleted);
            }
            this.InvokeAsync("ListAppRegistrations", new object[0], this.ListAppRegistrationsOperationCompleted, userState);
        }
        
        private void OnListAppRegistrationsOperationCompleted(object arg) {
            if ((this.ListAppRegistrationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAppRegistrationsCompleted(this, new ListAppRegistrationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ApplicationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dk.itst/UnregisterApp", RequestNamespace="http://dk.itst", ResponseNamespace="http://dk.itst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnregisterApp(string ApplicationToken) {
            object[] results = this.Invoke("UnregisterApp", new object[] {
                        ApplicationToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnregisterAppAsync(string ApplicationToken) {
            this.UnregisterAppAsync(ApplicationToken, null);
        }
        
        /// <remarks/>
        public void UnregisterAppAsync(string ApplicationToken, object userState) {
            if ((this.UnregisterAppOperationCompleted == null)) {
                this.UnregisterAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnregisterAppOperationCompleted);
            }
            this.InvokeAsync("UnregisterApp", new object[] {
                        ApplicationToken}, this.UnregisterAppOperationCompleted, userState);
        }
        
        private void OnUnregisterAppOperationCompleted(object arg) {
            if ((this.UnregisterAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnregisterAppCompleted(this, new UnregisterAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ApplicationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dk.itst/GetCapabilities", RequestNamespace="http://dk.itst", ResponseNamespace="http://dk.itst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceVersionType[] GetCapabilities() {
            object[] results = this.Invoke("GetCapabilities", new object[0]);
            return ((ServiceVersionType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCapabilitiesAsync() {
            this.GetCapabilitiesAsync(null);
        }
        
        /// <remarks/>
        public void GetCapabilitiesAsync(object userState) {
            if ((this.GetCapabilitiesOperationCompleted == null)) {
                this.GetCapabilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCapabilitiesOperationCompleted);
            }
            this.InvokeAsync("GetCapabilities", new object[0], this.GetCapabilitiesOperationCompleted, userState);
        }
        
        private void OnGetCapabilitiesOperationCompleted(object arg) {
            if ((this.GetCapabilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCapabilitiesCompleted(this, new GetCapabilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ApplicationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dk.itst/IsImplementing", RequestNamespace="http://dk.itst", ResponseNamespace="http://dk.itst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsImplementing(string serviceName, string serviceVersion) {
            object[] results = this.Invoke("IsImplementing", new object[] {
                        serviceName,
                        serviceVersion});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsImplementingAsync(string serviceName, string serviceVersion) {
            this.IsImplementingAsync(serviceName, serviceVersion, null);
        }
        
        /// <remarks/>
        public void IsImplementingAsync(string serviceName, string serviceVersion, object userState) {
            if ((this.IsImplementingOperationCompleted == null)) {
                this.IsImplementingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsImplementingOperationCompleted);
            }
            this.InvokeAsync("IsImplementing", new object[] {
                        serviceName,
                        serviceVersion}, this.IsImplementingOperationCompleted, userState);
        }
        
        private void OnIsImplementingOperationCompleted(object arg) {
            if ((this.IsImplementingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsImplementingCompleted(this, new IsImplementingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ApplicationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dk.itst/GetDataProviderList", RequestNamespace="http://dk.itst", ResponseNamespace="http://dk.itst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataProviderType[] GetDataProviderList() {
            object[] results = this.Invoke("GetDataProviderList", new object[0]);
            return ((DataProviderType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataProviderListAsync() {
            this.GetDataProviderListAsync(null);
        }
        
        /// <remarks/>
        public void GetDataProviderListAsync(object userState) {
            if ((this.GetDataProviderListOperationCompleted == null)) {
                this.GetDataProviderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataProviderListOperationCompleted);
            }
            this.InvokeAsync("GetDataProviderList", new object[0], this.GetDataProviderListOperationCompleted, userState);
        }
        
        private void OnGetDataProviderListOperationCompleted(object arg) {
            if ((this.GetDataProviderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataProviderListCompleted(this, new GetDataProviderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ApplicationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dk.itst/SetDataProviderList", RequestNamespace="http://dk.itst", ResponseNamespace="http://dk.itst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetDataProviderList(DataProviderType[] DataProviders) {
            object[] results = this.Invoke("SetDataProviderList", new object[] {
                        DataProviders});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetDataProviderListAsync(DataProviderType[] DataProviders) {
            this.SetDataProviderListAsync(DataProviders, null);
        }
        
        /// <remarks/>
        public void SetDataProviderListAsync(DataProviderType[] DataProviders, object userState) {
            if ((this.SetDataProviderListOperationCompleted == null)) {
                this.SetDataProviderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDataProviderListOperationCompleted);
            }
            this.InvokeAsync("SetDataProviderList", new object[] {
                        DataProviders}, this.SetDataProviderListOperationCompleted, userState);
        }
        
        private void OnSetDataProviderListOperationCompleted(object arg) {
            if ((this.SetDataProviderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDataProviderListCompleted(this, new SetDataProviderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ApplicationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dk.itst/Log", RequestNamespace="http://dk.itst", ResponseNamespace="http://dk.itst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Log(string Text) {
            object[] results = this.Invoke("Log", new object[] {
                        Text});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LogAsync(string Text) {
            this.LogAsync(Text, null);
        }
        
        /// <remarks/>
        public void LogAsync(string Text, object userState) {
            if ((this.LogOperationCompleted == null)) {
                this.LogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOperationCompleted);
            }
            this.InvokeAsync("Log", new object[] {
                        Text}, this.LogOperationCompleted, userState);
        }
        
        private void OnLogOperationCompleted(object arg) {
            if ((this.LogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogCompleted(this, new LogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dk.itst/Ping", RequestNamespace="http://dk.itst", ResponseNamespace="http://dk.itst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Ping() {
            object[] results = this.Invoke("Ping", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        /// <remarks/>
        public void PingAsync(object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[0], this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dk.itst")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://dk.itst", IsNullable=false)]
    public partial class ApplicationHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string applicationTokenField;
        
        private string userTokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string ApplicationToken {
            get {
                return this.applicationTokenField;
            }
            set {
                this.applicationTokenField = value;
            }
        }
        
        /// <remarks/>
        public string UserToken {
            get {
                return this.userTokenField;
            }
            set {
                this.userTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://rep.oio.dk/cpr.dk/xml/schemas/2009/07/01/")]
    public partial class AttributeType {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://rep.oio.dk/cpr.dk/xml/schemas/2009/07/01/")]
    public partial class DataProviderType {
        
        private string typeNameField;
        
        private bool enabledField;
        
        private AttributeType[] attributesField;
        
        /// <remarks/>
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Attributes")]
        public AttributeType[] Attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://rep.oio.dk/cpr.dk/xml/schemas/2009/07/01/")]
    public partial class ServiceVersionType {
        
        private string versionField;
        
        private string[] functionsField;
        
        private object detailsField;
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Functions", IsNullable=false)]
        public string[] Functions {
            get {
                return this.functionsField;
            }
            set {
                this.functionsField = value;
            }
        }
        
        /// <remarks/>
        public object Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://rep.oio.dk/cpr.dk/xml/schemas/2009/07/01/")]
    public partial class ApplicationType {
        
        private string applicationIdField;
        
        private string tokenField;
        
        private string nameField;
        
        private System.DateTime registrationDateField;
        
        private bool isApprovedField;
        
        private System.DateTime approvedDateField;
        
        /// <remarks/>
        public string ApplicationId {
            get {
                return this.applicationIdField;
            }
            set {
                this.applicationIdField = value;
            }
        }
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RegistrationDate {
            get {
                return this.registrationDateField;
            }
            set {
                this.registrationDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsApproved {
            get {
                return this.isApprovedField;
            }
            set {
                this.isApprovedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ApprovedDate {
            get {
                return this.approvedDateField;
            }
            set {
                this.approvedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RequestAppRegistrationCompletedEventHandler(object sender, RequestAppRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestAppRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestAppRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApplicationType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApplicationType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ApproveAppRegistrationCompletedEventHandler(object sender, ApproveAppRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveAppRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveAppRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ListAppRegistrationsCompletedEventHandler(object sender, ListAppRegistrationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAppRegistrationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAppRegistrationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApplicationType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApplicationType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UnregisterAppCompletedEventHandler(object sender, UnregisterAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnregisterAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnregisterAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCapabilitiesCompletedEventHandler(object sender, GetCapabilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceVersionType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceVersionType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void IsImplementingCompletedEventHandler(object sender, IsImplementingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsImplementingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsImplementingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDataProviderListCompletedEventHandler(object sender, GetDataProviderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataProviderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataProviderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataProviderType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataProviderType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetDataProviderListCompletedEventHandler(object sender, SetDataProviderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDataProviderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDataProviderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LogCompletedEventHandler(object sender, LogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591