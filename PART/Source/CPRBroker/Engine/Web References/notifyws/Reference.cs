//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3615.
// 
#pragma warning disable 1591

namespace CprBroker.Engine.notifyws {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="notifySoap", Namespace="http://rep.oio.dk/gentofte.dk/20080601")]
    public partial class notify : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SignalDocChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignalObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public notify() {
            this.Url = "http://notifyws/notify.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SignalDocChangedCompletedEventHandler SignalDocChangedCompleted;
        
        /// <remarks/>
        public event SignalObjectCompletedEventHandler SignalObjectCompleted;
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rep.oio.dk/gentofte.dk/20080601/SignalDocChanged", RequestNamespace="http://rep.oio.dk/gentofte.dk/20080601", ResponseNamespace="http://rep.oio.dk/gentofte.dk/20080601", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SignalDocChanged(string LogicalSourceURI, string LogicalDocID, ref string sAux) {
            object[] results = this.Invoke("SignalDocChanged", new object[] {
                        LogicalSourceURI,
                        LogicalDocID,
                        sAux});
            sAux = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SignalDocChangedAsync(string LogicalSourceURI, string LogicalDocID, string sAux) {
            this.SignalDocChangedAsync(LogicalSourceURI, LogicalDocID, sAux, null);
        }
        
        /// <remarks/>
        public void SignalDocChangedAsync(string LogicalSourceURI, string LogicalDocID, string sAux, object userState) {
            if ((this.SignalDocChangedOperationCompleted == null)) {
                this.SignalDocChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignalDocChangedOperationCompleted);
            }
            this.InvokeAsync("SignalDocChanged", new object[] {
                        LogicalSourceURI,
                        LogicalDocID,
                        sAux}, this.SignalDocChangedOperationCompleted, userState);
        }
        
        private void OnSignalDocChangedOperationCompleted(object arg) {
            if ((this.SignalDocChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignalDocChangedCompleted(this, new SignalDocChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rep.oio.dk/gentofte.dk/20080601/SignalObject", RequestNamespace="http://rep.oio.dk/gentofte.dk/20080601", ResponseNamespace="http://rep.oio.dk/gentofte.dk/20080601", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SignalObject(string SourceURI, string ObjectID, int ObjectType, int NotifyType, ref string sAux) {
            object[] results = this.Invoke("SignalObject", new object[] {
                        SourceURI,
                        ObjectID,
                        ObjectType,
                        NotifyType,
                        sAux});
            sAux = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SignalObjectAsync(string SourceURI, string ObjectID, int ObjectType, int NotifyType, string sAux) {
            this.SignalObjectAsync(SourceURI, ObjectID, ObjectType, NotifyType, sAux, null);
        }
        
        /// <remarks/>
        public void SignalObjectAsync(string SourceURI, string ObjectID, int ObjectType, int NotifyType, string sAux, object userState) {
            if ((this.SignalObjectOperationCompleted == null)) {
                this.SignalObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignalObjectOperationCompleted);
            }
            this.InvokeAsync("SignalObject", new object[] {
                        SourceURI,
                        ObjectID,
                        ObjectType,
                        NotifyType,
                        sAux}, this.SignalObjectOperationCompleted, userState);
        }
        
        private void OnSignalObjectOperationCompleted(object arg) {
            if ((this.SignalObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignalObjectCompleted(this, new SignalObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rep.oio.dk/gentofte.dk/20080601/Ping", RequestNamespace="http://rep.oio.dk/gentofte.dk/20080601", ResponseNamespace="http://rep.oio.dk/gentofte.dk/20080601", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Ping() {
            object[] results = this.Invoke("Ping", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        /// <remarks/>
        public void PingAsync(object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[0], this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SignalDocChangedCompletedEventHandler(object sender, SignalDocChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalDocChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignalDocChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sAux {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SignalObjectCompletedEventHandler(object sender, SignalObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignalObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignalObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sAux {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591